// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package coreeventlog

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type CoreEventLogFunc struct {
	sc wasmlib.ScContractFunc
}

func NewCoreEventLogFunc(ctx wasmlib.ScFuncContext) *CoreEventLogFunc {
	return &CoreEventLogFunc{sc: wasmlib.NewScContractFunc(ctx, HScName)}
}

func (f *CoreEventLogFunc) Delay(seconds int64) *CoreEventLogFunc {
	f.sc.Delay(seconds)
	return f
}

func (f *CoreEventLogFunc) OfContract(contract wasmlib.ScHname) *CoreEventLogFunc {
	f.sc.OfContract(contract)
	return f
}

func (f *CoreEventLogFunc) Post() *CoreEventLogFunc {
	f.sc.Post()
	return f
}

func (f *CoreEventLogFunc) PostToChain(chainId wasmlib.ScChainId) *CoreEventLogFunc {
	f.sc.PostToChain(chainId)
	return f
}

func (f *CoreEventLogFunc) GetNumRecords(params MutableViewGetNumRecordsParams) ImmutableViewGetNumRecordsResults {
	f.sc.Run(HViewGetNumRecords, params.id, nil)
	return ImmutableViewGetNumRecordsResults{id: f.sc.ResultMapId()}
}

func (f *CoreEventLogFunc) GetRecords(params MutableViewGetRecordsParams) {
	f.sc.Run(HViewGetRecords, params.id, nil)
}

type CoreEventLogView struct {
	sc wasmlib.ScContractView
}

func NewCoreEventLogView(ctx wasmlib.ScViewContext) *CoreEventLogView {
	return &CoreEventLogView{sc: wasmlib.NewScContractView(ctx, HScName)}
}

func (v *CoreEventLogView) OfContract(contract wasmlib.ScHname) *CoreEventLogView {
	v.sc.OfContract(contract)
	return v
}

func (v *CoreEventLogView) GetNumRecords(params MutableViewGetNumRecordsParams) ImmutableViewGetNumRecordsResults {
	v.sc.Run(HViewGetNumRecords, params.id)
	return ImmutableViewGetNumRecordsResults{id: v.sc.ResultMapId()}
}

func (v *CoreEventLogView) GetRecords(params MutableViewGetRecordsParams) {
	v.sc.Run(HViewGetRecords, params.id)
}
