// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package coreaccounts

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type DepositCall struct {
	Func   *wasmlib.ScFunc
	Params MutableDepositParams
}

func NewDepositCall(ctx wasmlib.ScFuncCallContext) *DepositCall {
	f := &DepositCall{Func: wasmlib.NewScFunc(HScName, HFuncDeposit)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

type WithdrawCall struct {
	Func *wasmlib.ScFunc
}

func NewWithdrawCall(ctx wasmlib.ScFuncCallContext) *WithdrawCall {
	return &WithdrawCall{Func: wasmlib.NewScFunc(HScName, HFuncWithdraw)}
}

type AccountsCall struct {
	Func    *wasmlib.ScView
	Results ImmutableAccountsResults
}

func NewAccountsCall(ctx wasmlib.ScViewCallContext) *AccountsCall {
	f := &AccountsCall{Func: wasmlib.NewScView(HScName, HViewAccounts)}
	f.Func.SetPtrs(nil, &f.Results.id)
	return f
}

type BalanceCall struct {
	Func    *wasmlib.ScView
	Params  MutableBalanceParams
	Results ImmutableBalanceResults
}

func NewBalanceCall(ctx wasmlib.ScViewCallContext) *BalanceCall {
	f := &BalanceCall{Func: wasmlib.NewScView(HScName, HViewBalance)}
	f.Func.SetPtrs(&f.Params.id, &f.Results.id)
	return f
}

type TotalAssetsCall struct {
	Func    *wasmlib.ScView
	Results ImmutableTotalAssetsResults
}

func NewTotalAssetsCall(ctx wasmlib.ScViewCallContext) *TotalAssetsCall {
	f := &TotalAssetsCall{Func: wasmlib.NewScView(HScName, HViewTotalAssets)}
	f.Func.SetPtrs(nil, &f.Results.id)
	return f
}
