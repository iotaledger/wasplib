// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package coreaccounts

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ImmutableDepositParams struct {
	id int32
}

func (s ImmutableDepositParams) AgentID() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, ParamAgentID.KeyID())
}

type MutableDepositParams struct {
	id int32
}

func (s MutableDepositParams) AgentID() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, ParamAgentID.KeyID())
}

type ImmutableHarvestParams struct {
	id int32
}

func (s ImmutableHarvestParams) WithdrawAmount() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ParamWithdrawAmount.KeyID())
}

func (s ImmutableHarvestParams) WithdrawColor() wasmlib.ScImmutableColor {
	return wasmlib.NewScImmutableColor(s.id, ParamWithdrawColor.KeyID())
}

type MutableHarvestParams struct {
	id int32
}

func (s MutableHarvestParams) WithdrawAmount() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ParamWithdrawAmount.KeyID())
}

func (s MutableHarvestParams) WithdrawColor() wasmlib.ScMutableColor {
	return wasmlib.NewScMutableColor(s.id, ParamWithdrawColor.KeyID())
}

type ImmutableBalanceParams struct {
	id int32
}

func (s ImmutableBalanceParams) AgentID() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, ParamAgentID.KeyID())
}

type MutableBalanceParams struct {
	id int32
}

func (s MutableBalanceParams) AgentID() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, ParamAgentID.KeyID())
}
