// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package coreblocklog

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ImmutableControlAddressesResults struct {
	id int32
}

func (s ImmutableControlAddressesResults) BlockIndex() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, ResultBlockIndex.KeyID())
}

func (s ImmutableControlAddressesResults) GoverningAddress() wasmlib.ScImmutableAddress {
	return wasmlib.NewScImmutableAddress(s.id, ResultGoverningAddress.KeyID())
}

func (s ImmutableControlAddressesResults) StateControllerAddress() wasmlib.ScImmutableAddress {
	return wasmlib.NewScImmutableAddress(s.id, ResultStateControllerAddress.KeyID())
}

type MutableControlAddressesResults struct {
	id int32
}

func (s MutableControlAddressesResults) BlockIndex() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, ResultBlockIndex.KeyID())
}

func (s MutableControlAddressesResults) GoverningAddress() wasmlib.ScMutableAddress {
	return wasmlib.NewScMutableAddress(s.id, ResultGoverningAddress.KeyID())
}

func (s MutableControlAddressesResults) StateControllerAddress() wasmlib.ScMutableAddress {
	return wasmlib.NewScMutableAddress(s.id, ResultStateControllerAddress.KeyID())
}

type ImmutableGetBlockInfoResults struct {
	id int32
}

func (s ImmutableGetBlockInfoResults) BlockInfo() wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(s.id, ResultBlockInfo.KeyID())
}

type MutableGetBlockInfoResults struct {
	id int32
}

func (s MutableGetBlockInfoResults) BlockInfo() wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(s.id, ResultBlockInfo.KeyID())
}

type ImmutableGetLatestBlockInfoResults struct {
	id int32
}

func (s ImmutableGetLatestBlockInfoResults) BlockInfo() wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(s.id, ResultBlockInfo.KeyID())
}

type MutableGetLatestBlockInfoResults struct {
	id int32
}

func (s MutableGetLatestBlockInfoResults) BlockInfo() wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(s.id, ResultBlockInfo.KeyID())
}

type ArrayOfImmutableBytes struct {
	objID int32
}

func (a ArrayOfImmutableBytes) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfImmutableBytes) GetBytes(index int32) wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(a.objID, wasmlib.Key32(index))
}

type ImmutableGetRequestIDsForBlockResults struct {
	id int32
}

func (s ImmutableGetRequestIDsForBlockResults) RequestID() ArrayOfImmutableBytes {
	arrID := wasmlib.GetObjectID(s.id, ResultRequestID.KeyID(), wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableBytes{objID: arrID}
}

type ArrayOfMutableBytes struct {
	objID int32
}

func (a ArrayOfMutableBytes) Clear() {
	wasmlib.Clear(a.objID)
}

func (a ArrayOfMutableBytes) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfMutableBytes) GetBytes(index int32) wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(a.objID, wasmlib.Key32(index))
}

type MutableGetRequestIDsForBlockResults struct {
	id int32
}

func (s MutableGetRequestIDsForBlockResults) RequestID() ArrayOfMutableBytes {
	arrID := wasmlib.GetObjectID(s.id, ResultRequestID.KeyID(), wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableBytes{objID: arrID}
}

type ImmutableGetRequestLogRecordResults struct {
	id int32
}

func (s ImmutableGetRequestLogRecordResults) BlockIndex() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, ResultBlockIndex.KeyID())
}

func (s ImmutableGetRequestLogRecordResults) RequestIndex() wasmlib.ScImmutableInt16 {
	return wasmlib.NewScImmutableInt16(s.id, ResultRequestIndex.KeyID())
}

func (s ImmutableGetRequestLogRecordResults) RequestRecord() wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(s.id, ResultRequestRecord.KeyID())
}

type MutableGetRequestLogRecordResults struct {
	id int32
}

func (s MutableGetRequestLogRecordResults) BlockIndex() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, ResultBlockIndex.KeyID())
}

func (s MutableGetRequestLogRecordResults) RequestIndex() wasmlib.ScMutableInt16 {
	return wasmlib.NewScMutableInt16(s.id, ResultRequestIndex.KeyID())
}

func (s MutableGetRequestLogRecordResults) RequestRecord() wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(s.id, ResultRequestRecord.KeyID())
}

type ImmutableGetRequestLogRecordsForBlockResults struct {
	id int32
}

func (s ImmutableGetRequestLogRecordsForBlockResults) RequestRecord() ArrayOfImmutableBytes {
	arrID := wasmlib.GetObjectID(s.id, ResultRequestRecord.KeyID(), wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableBytes{objID: arrID}
}

type MutableGetRequestLogRecordsForBlockResults struct {
	id int32
}

func (s MutableGetRequestLogRecordsForBlockResults) RequestRecord() ArrayOfMutableBytes {
	arrID := wasmlib.GetObjectID(s.id, ResultRequestRecord.KeyID(), wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableBytes{objID: arrID}
}

type ImmutableIsRequestProcessedResults struct {
	id int32
}

func (s ImmutableIsRequestProcessedResults) RequestProcessed() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, ResultRequestProcessed.KeyID())
}

type MutableIsRequestProcessedResults struct {
	id int32
}

func (s MutableIsRequestProcessedResults) RequestProcessed() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, ResultRequestProcessed.KeyID())
}
