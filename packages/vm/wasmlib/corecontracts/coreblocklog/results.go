// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package coreblocklog

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ImmutableViewControlAddressesResults struct {
	id int32
}

func (s ImmutableViewControlAddressesResults) BlockIndex() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultBlockIndex.KeyId())
}

func (s ImmutableViewControlAddressesResults) GoverningAddress() wasmlib.ScImmutableAddress {
	return wasmlib.NewScImmutableAddress(s.id, ResultGoverningAddress.KeyId())
}

func (s ImmutableViewControlAddressesResults) StateControllerAddress() wasmlib.ScImmutableAddress {
	return wasmlib.NewScImmutableAddress(s.id, ResultStateControllerAddress.KeyId())
}

type MutableViewControlAddressesResults struct {
	id int32
}

func (s MutableViewControlAddressesResults) BlockIndex() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultBlockIndex.KeyId())
}

func (s MutableViewControlAddressesResults) GoverningAddress() wasmlib.ScMutableAddress {
	return wasmlib.NewScMutableAddress(s.id, ResultGoverningAddress.KeyId())
}

func (s MutableViewControlAddressesResults) StateControllerAddress() wasmlib.ScMutableAddress {
	return wasmlib.NewScMutableAddress(s.id, ResultStateControllerAddress.KeyId())
}

type ImmutableViewGetBlockInfoResults struct {
	id int32
}

func (s ImmutableViewGetBlockInfoResults) BlockInfo() wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(s.id, ResultBlockInfo.KeyId())
}

type MutableViewGetBlockInfoResults struct {
	id int32
}

func (s MutableViewGetBlockInfoResults) BlockInfo() wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(s.id, ResultBlockInfo.KeyId())
}

type ImmutableViewGetLatestBlockInfoResults struct {
	id int32
}

func (s ImmutableViewGetLatestBlockInfoResults) BlockInfo() wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(s.id, ResultBlockInfo.KeyId())
}

type MutableViewGetLatestBlockInfoResults struct {
	id int32
}

func (s MutableViewGetLatestBlockInfoResults) BlockInfo() wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(s.id, ResultBlockInfo.KeyId())
}

type ImmutableViewGetRequestLogRecordResults struct {
	id int32
}

func (s ImmutableViewGetRequestLogRecordResults) BlockIndex() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultBlockIndex.KeyId())
}

func (s ImmutableViewGetRequestLogRecordResults) RequestIndex() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultRequestIndex.KeyId())
}

func (s ImmutableViewGetRequestLogRecordResults) RequestRecord() wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(s.id, ResultRequestRecord.KeyId())
}

type MutableViewGetRequestLogRecordResults struct {
	id int32
}

func (s MutableViewGetRequestLogRecordResults) BlockIndex() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultBlockIndex.KeyId())
}

func (s MutableViewGetRequestLogRecordResults) RequestIndex() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultRequestIndex.KeyId())
}

func (s MutableViewGetRequestLogRecordResults) RequestRecord() wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(s.id, ResultRequestRecord.KeyId())
}

type ImmutableViewIsRequestProcessedResults struct {
	id int32
}

func (s ImmutableViewIsRequestProcessedResults) RequestProcessed() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, ResultRequestProcessed.KeyId())
}

type MutableViewIsRequestProcessedResults struct {
	id int32
}

func (s MutableViewIsRequestProcessedResults) RequestProcessed() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, ResultRequestProcessed.KeyId())
}
