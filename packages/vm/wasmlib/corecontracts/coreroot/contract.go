// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package coreroot

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ClaimChainOwnershipCall struct {
	Func wasmlib.ScFunc
}

func NewClaimChainOwnershipCall(ctx wasmlib.ScFuncContext) *ClaimChainOwnershipCall {
	f := &ClaimChainOwnershipCall{}
	f.Func.Init(HScName, HFuncClaimChainOwnership, nil, nil)
	return f
}

type DelegateChainOwnershipCall struct {
	Func   wasmlib.ScFunc
	Params MutableDelegateChainOwnershipParams
}

func NewDelegateChainOwnershipCall(ctx wasmlib.ScFuncContext) *DelegateChainOwnershipCall {
	f := &DelegateChainOwnershipCall{}
	f.Func.Init(HScName, HFuncDelegateChainOwnership, &f.Params.id, nil)
	return f
}

type DeployContractCall struct {
	Func   wasmlib.ScFunc
	Params MutableDeployContractParams
}

func NewDeployContractCall(ctx wasmlib.ScFuncContext) *DeployContractCall {
	f := &DeployContractCall{}
	f.Func.Init(HScName, HFuncDeployContract, &f.Params.id, nil)
	return f
}

type GrantDeployPermissionCall struct {
	Func   wasmlib.ScFunc
	Params MutableGrantDeployPermissionParams
}

func NewGrantDeployPermissionCall(ctx wasmlib.ScFuncContext) *GrantDeployPermissionCall {
	f := &GrantDeployPermissionCall{}
	f.Func.Init(HScName, HFuncGrantDeployPermission, &f.Params.id, nil)
	return f
}

type RevokeDeployPermissionCall struct {
	Func   wasmlib.ScFunc
	Params MutableRevokeDeployPermissionParams
}

func NewRevokeDeployPermissionCall(ctx wasmlib.ScFuncContext) *RevokeDeployPermissionCall {
	f := &RevokeDeployPermissionCall{}
	f.Func.Init(HScName, HFuncRevokeDeployPermission, &f.Params.id, nil)
	return f
}

type SetContractFeeCall struct {
	Func   wasmlib.ScFunc
	Params MutableSetContractFeeParams
}

func NewSetContractFeeCall(ctx wasmlib.ScFuncContext) *SetContractFeeCall {
	f := &SetContractFeeCall{}
	f.Func.Init(HScName, HFuncSetContractFee, &f.Params.id, nil)
	return f
}

type SetDefaultFeeCall struct {
	Func   wasmlib.ScFunc
	Params MutableSetDefaultFeeParams
}

func NewSetDefaultFeeCall(ctx wasmlib.ScFuncContext) *SetDefaultFeeCall {
	f := &SetDefaultFeeCall{}
	f.Func.Init(HScName, HFuncSetDefaultFee, &f.Params.id, nil)
	return f
}

type FindContractCall struct {
	Func    wasmlib.ScView
	Params  MutableFindContractParams
	Results ImmutableFindContractResults
}

func NewFindContractCall(ctx wasmlib.ScFuncContext) *FindContractCall {
	f := &FindContractCall{}
	f.Func.Init(HScName, HViewFindContract, &f.Params.id, &f.Results.id)
	return f
}

func NewFindContractCallFromView(ctx wasmlib.ScViewContext) *FindContractCall {
	f := &FindContractCall{}
	f.Func.Init(HScName, HViewFindContract, &f.Params.id, &f.Results.id)
	return f
}

type GetChainInfoCall struct {
	Func    wasmlib.ScView
	Results ImmutableGetChainInfoResults
}

func NewGetChainInfoCall(ctx wasmlib.ScFuncContext) *GetChainInfoCall {
	f := &GetChainInfoCall{}
	f.Func.Init(HScName, HViewGetChainInfo, nil, &f.Results.id)
	return f
}

func NewGetChainInfoCallFromView(ctx wasmlib.ScViewContext) *GetChainInfoCall {
	f := &GetChainInfoCall{}
	f.Func.Init(HScName, HViewGetChainInfo, nil, &f.Results.id)
	return f
}

type GetFeeInfoCall struct {
	Func    wasmlib.ScView
	Params  MutableGetFeeInfoParams
	Results ImmutableGetFeeInfoResults
}

func NewGetFeeInfoCall(ctx wasmlib.ScFuncContext) *GetFeeInfoCall {
	f := &GetFeeInfoCall{}
	f.Func.Init(HScName, HViewGetFeeInfo, &f.Params.id, &f.Results.id)
	return f
}

func NewGetFeeInfoCallFromView(ctx wasmlib.ScViewContext) *GetFeeInfoCall {
	f := &GetFeeInfoCall{}
	f.Func.Init(HScName, HViewGetFeeInfo, &f.Params.id, &f.Results.id)
	return f
}
