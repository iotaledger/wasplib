// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package coreroot

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ImmutableFindContractResults struct {
	id int32
}

func (s ImmutableFindContractResults) Data() wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(s.id, ResultData.KeyId())
}

type MutableFindContractResults struct {
	id int32
}

func (s MutableFindContractResults) Data() wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(s.id, ResultData.KeyId())
}

type MapHnameToImmutableBytes struct {
	objId int32
}

func (m MapHnameToImmutableBytes) GetBytes(key wasmlib.ScHname) wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(m.objId, key.KeyId())
}

type ImmutableGetChainInfoResults struct {
	id int32
}

func (s ImmutableGetChainInfoResults) ChainID() wasmlib.ScImmutableChainId {
	return wasmlib.NewScImmutableChainId(s.id, ResultChainID.KeyId())
}

func (s ImmutableGetChainInfoResults) ChainOwnerID() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, ResultChainOwnerID.KeyId())
}

func (s ImmutableGetChainInfoResults) ContractRegistry() MapHnameToImmutableBytes {
	mapId := wasmlib.GetObjectId(s.id, ResultContractRegistry.KeyId(), wasmlib.TYPE_MAP)
	return MapHnameToImmutableBytes{objId: mapId}
}

func (s ImmutableGetChainInfoResults) DefaultOwnerFee() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultDefaultOwnerFee.KeyId())
}

func (s ImmutableGetChainInfoResults) DefaultValidatorFee() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultDefaultValidatorFee.KeyId())
}

func (s ImmutableGetChainInfoResults) Description() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, ResultDescription.KeyId())
}

func (s ImmutableGetChainInfoResults) FeeColor() wasmlib.ScImmutableColor {
	return wasmlib.NewScImmutableColor(s.id, ResultFeeColor.KeyId())
}

type MapHnameToMutableBytes struct {
	objId int32
}

func (m MapHnameToMutableBytes) Clear() {
	wasmlib.Clear(m.objId)
}

func (m MapHnameToMutableBytes) GetBytes(key wasmlib.ScHname) wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(m.objId, key.KeyId())
}

type MutableGetChainInfoResults struct {
	id int32
}

func (s MutableGetChainInfoResults) ChainID() wasmlib.ScMutableChainId {
	return wasmlib.NewScMutableChainId(s.id, ResultChainID.KeyId())
}

func (s MutableGetChainInfoResults) ChainOwnerID() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, ResultChainOwnerID.KeyId())
}

func (s MutableGetChainInfoResults) ContractRegistry() MapHnameToMutableBytes {
	mapId := wasmlib.GetObjectId(s.id, ResultContractRegistry.KeyId(), wasmlib.TYPE_MAP)
	return MapHnameToMutableBytes{objId: mapId}
}

func (s MutableGetChainInfoResults) DefaultOwnerFee() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultDefaultOwnerFee.KeyId())
}

func (s MutableGetChainInfoResults) DefaultValidatorFee() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultDefaultValidatorFee.KeyId())
}

func (s MutableGetChainInfoResults) Description() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, ResultDescription.KeyId())
}

func (s MutableGetChainInfoResults) FeeColor() wasmlib.ScMutableColor {
	return wasmlib.NewScMutableColor(s.id, ResultFeeColor.KeyId())
}

type ImmutableGetFeeInfoResults struct {
	id int32
}

func (s ImmutableGetFeeInfoResults) FeeColor() wasmlib.ScImmutableColor {
	return wasmlib.NewScImmutableColor(s.id, ResultFeeColor.KeyId())
}

func (s ImmutableGetFeeInfoResults) OwnerFee() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultOwnerFee.KeyId())
}

func (s ImmutableGetFeeInfoResults) ValidatorFee() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultValidatorFee.KeyId())
}

type MutableGetFeeInfoResults struct {
	id int32
}

func (s MutableGetFeeInfoResults) FeeColor() wasmlib.ScMutableColor {
	return wasmlib.NewScMutableColor(s.id, ResultFeeColor.KeyId())
}

func (s MutableGetFeeInfoResults) OwnerFee() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultOwnerFee.KeyId())
}

func (s MutableGetFeeInfoResults) ValidatorFee() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultValidatorFee.KeyId())
}
