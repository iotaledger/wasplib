// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package coreroot

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ImmutableFindContractResults struct {
	id int32
}

func (s ImmutableFindContractResults) Data() wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(s.id, ResultData.KeyID())
}

type MutableFindContractResults struct {
	id int32
}

func (s MutableFindContractResults) Data() wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(s.id, ResultData.KeyID())
}

type MapHnameToImmutableBytes struct {
	objID int32
}

func (m MapHnameToImmutableBytes) GetBytes(key wasmlib.ScHname) wasmlib.ScImmutableBytes {
	return wasmlib.NewScImmutableBytes(m.objID, key.KeyID())
}

type ImmutableGetChainInfoResults struct {
	id int32
}

func (s ImmutableGetChainInfoResults) ChainID() wasmlib.ScImmutableChainID {
	return wasmlib.NewScImmutableChainID(s.id, ResultChainID.KeyID())
}

func (s ImmutableGetChainInfoResults) ChainOwnerID() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, ResultChainOwnerID.KeyID())
}

func (s ImmutableGetChainInfoResults) ContractRegistry() MapHnameToImmutableBytes {
	mapID := wasmlib.GetObjectID(s.id, ResultContractRegistry.KeyID(), wasmlib.TYPE_MAP)
	return MapHnameToImmutableBytes{objID: mapID}
}

func (s ImmutableGetChainInfoResults) DefaultOwnerFee() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultDefaultOwnerFee.KeyID())
}

func (s ImmutableGetChainInfoResults) DefaultValidatorFee() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultDefaultValidatorFee.KeyID())
}

func (s ImmutableGetChainInfoResults) Description() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, ResultDescription.KeyID())
}

func (s ImmutableGetChainInfoResults) FeeColor() wasmlib.ScImmutableColor {
	return wasmlib.NewScImmutableColor(s.id, ResultFeeColor.KeyID())
}

type MapHnameToMutableBytes struct {
	objID int32
}

func (m MapHnameToMutableBytes) Clear() {
	wasmlib.Clear(m.objID)
}

func (m MapHnameToMutableBytes) GetBytes(key wasmlib.ScHname) wasmlib.ScMutableBytes {
	return wasmlib.NewScMutableBytes(m.objID, key.KeyID())
}

type MutableGetChainInfoResults struct {
	id int32
}

func (s MutableGetChainInfoResults) ChainID() wasmlib.ScMutableChainID {
	return wasmlib.NewScMutableChainID(s.id, ResultChainID.KeyID())
}

func (s MutableGetChainInfoResults) ChainOwnerID() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, ResultChainOwnerID.KeyID())
}

func (s MutableGetChainInfoResults) ContractRegistry() MapHnameToMutableBytes {
	mapID := wasmlib.GetObjectID(s.id, ResultContractRegistry.KeyID(), wasmlib.TYPE_MAP)
	return MapHnameToMutableBytes{objID: mapID}
}

func (s MutableGetChainInfoResults) DefaultOwnerFee() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultDefaultOwnerFee.KeyID())
}

func (s MutableGetChainInfoResults) DefaultValidatorFee() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultDefaultValidatorFee.KeyID())
}

func (s MutableGetChainInfoResults) Description() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, ResultDescription.KeyID())
}

func (s MutableGetChainInfoResults) FeeColor() wasmlib.ScMutableColor {
	return wasmlib.NewScMutableColor(s.id, ResultFeeColor.KeyID())
}

type ImmutableGetFeeInfoResults struct {
	id int32
}

func (s ImmutableGetFeeInfoResults) FeeColor() wasmlib.ScImmutableColor {
	return wasmlib.NewScImmutableColor(s.id, ResultFeeColor.KeyID())
}

func (s ImmutableGetFeeInfoResults) OwnerFee() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultOwnerFee.KeyID())
}

func (s ImmutableGetFeeInfoResults) ValidatorFee() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, ResultValidatorFee.KeyID())
}

type MutableGetFeeInfoResults struct {
	id int32
}

func (s MutableGetFeeInfoResults) FeeColor() wasmlib.ScMutableColor {
	return wasmlib.NewScMutableColor(s.id, ResultFeeColor.KeyID())
}

func (s MutableGetFeeInfoResults) OwnerFee() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultOwnerFee.KeyID())
}

func (s MutableGetFeeInfoResults) ValidatorFee() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, ResultValidatorFee.KeyID())
}
