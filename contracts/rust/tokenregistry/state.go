// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package tokenregistry

import "github.com/iotaledger/wasp/packages/vm/wasmlib"

type ArrayOfImmutableColor struct {
	objID int32
}

func (a ArrayOfImmutableColor) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfImmutableColor) GetColor(index int32) wasmlib.ScImmutableColor {
	return wasmlib.NewScImmutableColor(a.objID, wasmlib.Key32(index))
}

type MapColorToImmutableToken struct {
	objID int32
}

func (m MapColorToImmutableToken) GetToken(key wasmlib.ScColor) ImmutableToken {
	return ImmutableToken{objID: m.objID, keyID: key.KeyID()}
}

type ImmutableTokenRegistryState struct {
	id int32
}

func (s ImmutableTokenRegistryState) ColorList() ArrayOfImmutableColor {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateColorList], wasmlib.TYPE_ARRAY|wasmlib.TYPE_COLOR)
	return ArrayOfImmutableColor{objID: arrID}
}

func (s ImmutableTokenRegistryState) Registry() MapColorToImmutableToken {
	mapID := wasmlib.GetObjectID(s.id, idxMap[IdxStateRegistry], wasmlib.TYPE_MAP)
	return MapColorToImmutableToken{objID: mapID}
}

type ArrayOfMutableColor struct {
	objID int32
}

func (a ArrayOfMutableColor) Clear() {
	wasmlib.Clear(a.objID)
}

func (a ArrayOfMutableColor) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfMutableColor) GetColor(index int32) wasmlib.ScMutableColor {
	return wasmlib.NewScMutableColor(a.objID, wasmlib.Key32(index))
}

type MapColorToMutableToken struct {
	objID int32
}

func (m MapColorToMutableToken) Clear() {
	wasmlib.Clear(m.objID)
}

func (m MapColorToMutableToken) GetToken(key wasmlib.ScColor) MutableToken {
	return MutableToken{objID: m.objID, keyID: key.KeyID()}
}

type MutableTokenRegistryState struct {
	id int32
}

func (s MutableTokenRegistryState) ColorList() ArrayOfMutableColor {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateColorList], wasmlib.TYPE_ARRAY|wasmlib.TYPE_COLOR)
	return ArrayOfMutableColor{objID: arrID}
}

func (s MutableTokenRegistryState) Registry() MapColorToMutableToken {
	mapID := wasmlib.GetObjectID(s.id, idxMap[IdxStateRegistry], wasmlib.TYPE_MAP)
	return MapColorToMutableToken{objID: mapID}
}
