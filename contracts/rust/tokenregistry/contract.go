// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package tokenregistry

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type MintSupplyCall struct {
	Func   *wasmlib.ScFunc
	Params MutableMintSupplyParams
}

func NewMintSupplyCall(ctx wasmlib.ScFuncCallContext) *MintSupplyCall {
	f := &MintSupplyCall{Func: wasmlib.NewScFunc(HScName, HFuncMintSupply)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

type TransferOwnershipCall struct {
	Func   *wasmlib.ScFunc
	Params MutableTransferOwnershipParams
}

func NewTransferOwnershipCall(ctx wasmlib.ScFuncCallContext) *TransferOwnershipCall {
	f := &TransferOwnershipCall{Func: wasmlib.NewScFunc(HScName, HFuncTransferOwnership)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

type UpdateMetadataCall struct {
	Func   *wasmlib.ScFunc
	Params MutableUpdateMetadataParams
}

func NewUpdateMetadataCall(ctx wasmlib.ScFuncCallContext) *UpdateMetadataCall {
	f := &UpdateMetadataCall{Func: wasmlib.NewScFunc(HScName, HFuncUpdateMetadata)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

type GetInfoCall struct {
	Func   *wasmlib.ScView
	Params MutableGetInfoParams
}

func NewGetInfoCall(ctx wasmlib.ScViewCallContext) *GetInfoCall {
	f := &GetInfoCall{Func: wasmlib.NewScView(HScName, HViewGetInfo)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}
