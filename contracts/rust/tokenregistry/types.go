// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package tokenregistry

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type Token struct {
	Created     int64             // creation timestamp
	Description string            // description what minted token represents
	MintedBy    wasmlib.ScAgentId // original minter
	Owner       wasmlib.ScAgentId // current owner
	Supply      int64             // amount of tokens originally minted
	Updated     int64             // last update timestamp
	UserDefined string            // any user defined text
}

func NewTokenFromBytes(bytes []byte) *Token {
	decode := wasmlib.NewBytesDecoder(bytes)
	data := &Token{}
	data.Created = decode.Int64()
	data.Description = decode.String()
	data.MintedBy = decode.AgentId()
	data.Owner = decode.AgentId()
	data.Supply = decode.Int64()
	data.Updated = decode.Int64()
	data.UserDefined = decode.String()
	decode.Close()
	return data
}

func (o *Token) Bytes() []byte {
	return wasmlib.NewBytesEncoder().
		Int64(o.Created).
		String(o.Description).
		AgentId(o.MintedBy).
		AgentId(o.Owner).
		Int64(o.Supply).
		Int64(o.Updated).
		String(o.UserDefined).
		Data()
}
