// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use crate::*;
use crate::corecontracts::coreblob::*;

#[derive(Clone, Copy)]
pub struct ImmutableGetBlobFieldParams {
    pub(crate) id: i32,
}

impl ImmutableGetBlobFieldParams {
    pub fn field(&self) -> ScImmutableString {
        ScImmutableString::new(self.id, PARAM_FIELD.get_key_id())
    }

    pub fn hash(&self) -> ScImmutableHash {
        ScImmutableHash::new(self.id, PARAM_HASH.get_key_id())
    }
}

#[derive(Clone, Copy)]
pub struct MutableGetBlobFieldParams {
    pub(crate) id: i32,
}

impl MutableGetBlobFieldParams {
    pub fn field(&self) -> ScMutableString {
        ScMutableString::new(self.id, PARAM_FIELD.get_key_id())
    }

    pub fn hash(&self) -> ScMutableHash {
        ScMutableHash::new(self.id, PARAM_HASH.get_key_id())
    }
}

#[derive(Clone, Copy)]
pub struct ImmutableGetBlobInfoParams {
    pub(crate) id: i32,
}

impl ImmutableGetBlobInfoParams {
    pub fn hash(&self) -> ScImmutableHash {
        ScImmutableHash::new(self.id, PARAM_HASH.get_key_id())
    }
}

#[derive(Clone, Copy)]
pub struct MutableGetBlobInfoParams {
    pub(crate) id: i32,
}

impl MutableGetBlobInfoParams {
    pub fn hash(&self) -> ScMutableHash {
        ScMutableHash::new(self.id, PARAM_HASH.get_key_id())
    }
}
