// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use crate::*;
use crate::corecontracts::coreblob::*;
use crate::host::*;

#[derive(Clone, Copy)]
pub struct ImmutableStoreBlobResults {
    pub(crate) id: i32,
}

impl ImmutableStoreBlobResults {
    pub fn hash(&self) -> ScImmutableHash {
        ScImmutableHash::new(self.id, RESULT_HASH.get_key_id())
    }
}

#[derive(Clone, Copy)]
pub struct MutableStoreBlobResults {
    pub(crate) id: i32,
}

impl MutableStoreBlobResults {
    pub fn hash(&self) -> ScMutableHash {
        ScMutableHash::new(self.id, RESULT_HASH.get_key_id())
    }
}

#[derive(Clone, Copy)]
pub struct ImmutableGetBlobFieldResults {
    pub(crate) id: i32,
}

impl ImmutableGetBlobFieldResults {
    pub fn bytes(&self) -> ScImmutableBytes {
        ScImmutableBytes::new(self.id, RESULT_BYTES.get_key_id())
    }
}

#[derive(Clone, Copy)]
pub struct MutableGetBlobFieldResults {
    pub(crate) id: i32,
}

impl MutableGetBlobFieldResults {
    pub fn bytes(&self) -> ScMutableBytes {
        ScMutableBytes::new(self.id, RESULT_BYTES.get_key_id())
    }
}
