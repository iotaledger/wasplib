// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use crate::*;
use crate::corecontracts::coreeventlog::*;
use crate::host::*;

#[derive(Clone, Copy)]
pub struct ImmutableViewGetNumRecordsResults {
    pub(crate) id: i32,
}

impl ImmutableViewGetNumRecordsResults {
    pub fn num_records(&self) -> ScImmutableInt64 {
        ScImmutableInt64::new(self.id, RESULT_NUM_RECORDS.get_key_id())
    }
}

#[derive(Clone, Copy)]
pub struct MutableViewGetNumRecordsResults {
    pub(crate) id: i32,
}

impl MutableViewGetNumRecordsResults {
    pub fn num_records(&self) -> ScMutableInt64 {
        ScMutableInt64::new(self.id, RESULT_NUM_RECORDS.get_key_id())
    }
}

#[derive(Clone, Copy)]
pub struct ImmutableViewGetRecordsResults {
    pub(crate) id: i32,
}

#[derive(Clone, Copy)]
pub struct MutableViewGetRecordsResults {
    pub(crate) id: i32,
}
