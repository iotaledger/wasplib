// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]

use crate::*;
use crate::corecontracts::coregovernance::*;

pub struct CoreGovernanceFunc {
    sc: ScContractFunc,
}

impl CoreGovernanceFunc {
    pub fn new(ctx: &ScFuncContext) -> CoreGovernanceFunc {
        CoreGovernanceFunc { sc: ScContractFunc::new(ctx, HSC_NAME) }
    }

    pub fn delay(&mut self, seconds: i32) -> &mut CoreGovernanceFunc {
        self.sc.delay(seconds);
        self
    }

    pub fn of_contract(&mut self, contract: ScHname) -> &mut CoreGovernanceFunc {
        self.sc.of_contract(contract);
        self
    }

    pub fn post(&mut self) -> &mut CoreGovernanceFunc {
        self.sc.post();
        self
    }

    pub fn post_to_chain(&mut self, chain_id: ScChainId) -> &mut CoreGovernanceFunc {
        self.sc.post_to_chain(chain_id);
        self
    }

    pub fn add_allowed_state_controller_address(&mut self, params: MutableFuncAddAllowedStateControllerAddressParams, transfer: ScTransfers) {
        self.sc.run(HFUNC_ADD_ALLOWED_STATE_CONTROLLER_ADDRESS, params.id, Some(transfer));
    }

    pub fn remove_allowed_state_controller_address(&mut self, params: MutableFuncRemoveAllowedStateControllerAddressParams, transfer: ScTransfers) {
        self.sc.run(HFUNC_REMOVE_ALLOWED_STATE_CONTROLLER_ADDRESS, params.id, Some(transfer));
    }

    pub fn rotate_state_controller(&mut self, params: MutableFuncRotateStateControllerParams, transfer: ScTransfers) {
        self.sc.run(HFUNC_ROTATE_STATE_CONTROLLER, params.id, Some(transfer));
    }

    pub fn get_allowed_state_controller_addresses(&mut self) {
        self.sc.run(HVIEW_GET_ALLOWED_STATE_CONTROLLER_ADDRESSES, 0, None);
    }
}

pub struct CoreGovernanceView {
    sc: ScContractView,
}

impl CoreGovernanceView {
    pub fn new(ctx: &ScViewContext) -> CoreGovernanceView {
        CoreGovernanceView { sc: ScContractView::new(ctx, HSC_NAME) }
    }

    pub fn of_contract(&mut self, contract: ScHname) -> &mut CoreGovernanceView {
        self.sc.of_contract(contract);
        self
    }

    pub fn get_allowed_state_controller_addresses(&mut self) {
        self.sc.run(HVIEW_GET_ALLOWED_STATE_CONTROLLER_ADDRESSES, 0);
    }
}
