// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package betting

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ArrayOfImmutableBettingRound struct {
	objID int32
}

func (a ArrayOfImmutableBettingRound) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfImmutableBettingRound) GetBettingRound(index int32) ImmutableBettingRound {
	subID := wasmlib.GetObjectID(m.objID, wasmlib.Key32(index), wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ImmutableBettingRound{objID: subID}
}

type ImmutableBettingState struct {
	id int32
}

func (s ImmutableBettingState) Owner() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxStateOwner])
}

func (s ImmutableBettingState) Rounds() ArrayOfImmutableBettingRound {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateRounds], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableBettingRound{objID: arrID}
}

type ArrayOfMutableBettingRound struct {
	objID int32
}

func (a ArrayOfMutableBettingRound) Clear() {
	wasmlib.Clear(a.objID)
}

func (a ArrayOfMutableBettingRound) Length() int32 {
	return wasmlib.GetLength(a.objID)
}

func (a ArrayOfMutableBettingRound) GetBettingRound(index int32) MutableBettingRound {
	subID := wasmlib.GetObjectID(m.objID, wasmlib.Key32(index), wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return MutableBettingRound{objID: subID}
}

type MutableBettingState struct {
	id int32
}

func (s MutableBettingState) Owner() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxStateOwner])
}

func (s MutableBettingState) Rounds() ArrayOfMutableBettingRound {
	arrID := wasmlib.GetObjectID(s.id, idxMap[IdxStateRounds], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableBettingRound{objID: arrID}
}
