// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use wasmlib::host::*;

use crate::*;
use crate::keys::*;
use crate::subtypes::*;
use crate::types::*;

pub struct ArrayOfImmutableBettingRound {
    pub(crate) obj_id: i32,
}

impl ArrayOfImmutableBettingRound {
    pub fn length(&self) -> i32 {
        get_length(self.obj_id)
    }

    pub fn get_betting_round(&self, index: i32) -> ImmutableBettingRound {
        let sub_id = get_object_id(self.obj_id, Key32(index), TYPE_ARRAY | TYPE_BYTES)
        ImmutableBettingRound { obj_id: sub_id }
    }
}

#[derive(Clone, Copy)]
pub struct ImmutableBettingState {
    pub(crate) id: i32,
}

impl ImmutableBettingState {
    pub fn owner(&self) -> ScImmutableAgentID {
        ScImmutableAgentID::new(self.id, idx_map(IDX_STATE_OWNER))
    }

    pub fn rounds(&self) -> ArrayOfImmutableBettingRound {
        let arr_id = get_object_id(self.id, idx_map(IDX_STATE_ROUNDS), TYPE_ARRAY | TYPE_BYTES);
        ArrayOfImmutableBettingRound { obj_id: arr_id }
    }
}

pub struct ArrayOfMutableBettingRound {
    pub(crate) obj_id: i32,
}

impl ArrayOfMutableBettingRound {
    pub fn clear(&self) {
        clear(self.obj_id);
    }

    pub fn length(&self) -> i32 {
        get_length(self.obj_id)
    }

    pub fn get_betting_round(&self, index: i32) -> MutableBettingRound {
        let sub_id = get_object_id(self.obj_id, Key32(index), TYPE_ARRAY | TYPE_BYTES)
        MutableBettingRound { obj_id: sub_id }
    }
}

#[derive(Clone, Copy)]
pub struct MutableBettingState {
    pub(crate) id: i32,
}

impl MutableBettingState {
    pub fn owner(&self) -> ScMutableAgentID {
        ScMutableAgentID::new(self.id, idx_map(IDX_STATE_OWNER))
    }

    pub fn rounds(&self) -> ArrayOfMutableBettingRound {
        let arr_id = get_object_id(self.id, idx_map(IDX_STATE_ROUNDS), TYPE_ARRAY | TYPE_BYTES);
        ArrayOfMutableBettingRound { obj_id: arr_id }
    }
}
