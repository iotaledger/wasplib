// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use wasmlib::host::*;

use crate::*;
use crate::keys::*;

pub struct MutableFuncDonateParams {
    pub(crate) id: i32,
}

impl MutableFuncDonateParams {
    pub fn feedback(&self) -> ScMutableString {
        ScMutableString::new(self.id, idx_map(IDX_PARAM_FEEDBACK))
    }
}

pub struct ImmutableFuncDonateParams {
    pub(crate) id: i32,
}

impl ImmutableFuncDonateParams {
    pub fn feedback(&self) -> ScImmutableString {
        ScImmutableString::new(self.id, idx_map(IDX_PARAM_FEEDBACK))
    }
}

pub struct MutableFuncWithdrawParams {
    pub(crate) id: i32,
}

impl MutableFuncWithdrawParams {
    pub fn amount(&self) -> ScMutableInt64 {
        ScMutableInt64::new(self.id, idx_map(IDX_PARAM_AMOUNT))
    }
}

pub struct ImmutableFuncWithdrawParams {
    pub(crate) id: i32,
}

impl ImmutableFuncWithdrawParams {
    pub fn amount(&self) -> ScImmutableInt64 {
        ScImmutableInt64::new(self.id, idx_map(IDX_PARAM_AMOUNT))
    }
}

pub struct MutableViewDonationParams {
    pub(crate) id: i32,
}

impl MutableViewDonationParams {
    pub fn nr(&self) -> ScMutableInt64 {
        ScMutableInt64::new(self.id, idx_map(IDX_PARAM_NR))
    }
}

pub struct ImmutableViewDonationParams {
    pub(crate) id: i32,
}

impl ImmutableViewDonationParams {
    pub fn nr(&self) -> ScImmutableInt64 {
        ScImmutableInt64::new(self.id, idx_map(IDX_PARAM_NR))
    }
}

pub struct MutableViewDonationInfoParams {
    pub(crate) id: i32,
}

pub struct ImmutableViewDonationInfoParams {
    pub(crate) id: i32,
}
