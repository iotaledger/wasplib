// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package donatewithfeedback

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type MutableFuncDonateResults struct {
	id int32
}

type ImmutableFuncDonateResults struct {
	id int32
}

type MutableFuncWithdrawResults struct {
	id int32
}

type ImmutableFuncWithdrawResults struct {
	id int32
}

type MutableViewDonationResults struct {
	id int32
}

func (s MutableViewDonationResults) Amount() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultAmount])
}

func (s MutableViewDonationResults) Donator() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxResultDonator])
}

func (s MutableViewDonationResults) Error() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxResultError])
}

func (s MutableViewDonationResults) Feedback() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxResultFeedback])
}

func (s MutableViewDonationResults) Timestamp() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultTimestamp])
}

type ImmutableViewDonationResults struct {
	id int32
}

func (s ImmutableViewDonationResults) Amount() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultAmount])
}

func (s ImmutableViewDonationResults) Donator() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxResultDonator])
}

func (s ImmutableViewDonationResults) Error() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxResultError])
}

func (s ImmutableViewDonationResults) Feedback() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxResultFeedback])
}

func (s ImmutableViewDonationResults) Timestamp() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultTimestamp])
}

type MutableViewDonationInfoResults struct {
	id int32
}

func (s MutableViewDonationInfoResults) Count() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultCount])
}

func (s MutableViewDonationInfoResults) MaxDonation() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultMaxDonation])
}

func (s MutableViewDonationInfoResults) TotalDonation() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultTotalDonation])
}

type ImmutableViewDonationInfoResults struct {
	id int32
}

func (s ImmutableViewDonationInfoResults) Count() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultCount])
}

func (s ImmutableViewDonationInfoResults) MaxDonation() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultMaxDonation])
}

func (s ImmutableViewDonationInfoResults) TotalDonation() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultTotalDonation])
}
