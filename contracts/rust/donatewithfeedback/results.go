// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package donatewithfeedback

import "github.com/iotaledger/wasp/packages/vm/wasmlib"

type ImmutableDonationResults struct {
	id int32
}

func (s ImmutableDonationResults) Amount() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultAmount])
}

func (s ImmutableDonationResults) Donator() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxResultDonator])
}

func (s ImmutableDonationResults) Error() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxResultError])
}

func (s ImmutableDonationResults) Feedback() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxResultFeedback])
}

func (s ImmutableDonationResults) Timestamp() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultTimestamp])
}

type MutableDonationResults struct {
	id int32
}

func (s MutableDonationResults) Amount() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultAmount])
}

func (s MutableDonationResults) Donator() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxResultDonator])
}

func (s MutableDonationResults) Error() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxResultError])
}

func (s MutableDonationResults) Feedback() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxResultFeedback])
}

func (s MutableDonationResults) Timestamp() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultTimestamp])
}

type ImmutableDonationInfoResults struct {
	id int32
}

func (s ImmutableDonationInfoResults) Count() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultCount])
}

func (s ImmutableDonationInfoResults) MaxDonation() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultMaxDonation])
}

func (s ImmutableDonationInfoResults) TotalDonation() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxResultTotalDonation])
}

type MutableDonationInfoResults struct {
	id int32
}

func (s MutableDonationInfoResults) Count() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultCount])
}

func (s MutableDonationInfoResults) MaxDonation() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultMaxDonation])
}

func (s MutableDonationInfoResults) TotalDonation() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxResultTotalDonation])
}
