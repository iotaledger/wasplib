// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package fairauction

import "github.com/iotaledger/wasp/packages/vm/wasmlib"

type MapColorToImmutableAuction struct {
	objID int32
}

func (m MapColorToImmutableAuction) GetAuction(key wasmlib.ScColor) ImmutableAuction {
	return ImmutableAuction{objID: m.objID, keyID: key.KeyID()}
}

type MapColorToImmutableBidderList struct {
	objID int32
}

func (m MapColorToImmutableBidderList) GetBidderList(key wasmlib.ScColor) ImmutableBidderList {
	subID := wasmlib.GetObjectID(m.objID, key.KeyID(), wasmlib.TYPE_ARRAY|wasmlib.TYPE_AGENT_ID)
	return ImmutableBidderList{objID: subID}
}

type MapColorToImmutableBids struct {
	objID int32
}

func (m MapColorToImmutableBids) GetBids(key wasmlib.ScColor) ImmutableBids {
	subID := wasmlib.GetObjectID(m.objID, key.KeyID(), wasmlib.TYPE_MAP)
	return ImmutableBids{objID: subID}
}

type ImmutableFairAuctionState struct {
	id int32
}

func (s ImmutableFairAuctionState) Auctions() MapColorToImmutableAuction {
	mapID := wasmlib.GetObjectID(s.id, idxMap[IdxStateAuctions], wasmlib.TYPE_MAP)
	return MapColorToImmutableAuction{objID: mapID}
}

func (s ImmutableFairAuctionState) BidderList() MapColorToImmutableBidderList {
	mapID := wasmlib.GetObjectID(s.id, idxMap[IdxStateBidderList], wasmlib.TYPE_MAP)
	return MapColorToImmutableBidderList{objID: mapID}
}

func (s ImmutableFairAuctionState) Bids() MapColorToImmutableBids {
	mapID := wasmlib.GetObjectID(s.id, idxMap[IdxStateBids], wasmlib.TYPE_MAP)
	return MapColorToImmutableBids{objID: mapID}
}

func (s ImmutableFairAuctionState) OwnerMargin() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxStateOwnerMargin])
}

type MapColorToMutableAuction struct {
	objID int32
}

func (m MapColorToMutableAuction) Clear() {
	wasmlib.Clear(m.objID)
}

func (m MapColorToMutableAuction) GetAuction(key wasmlib.ScColor) MutableAuction {
	return MutableAuction{objID: m.objID, keyID: key.KeyID()}
}

type MapColorToMutableBidderList struct {
	objID int32
}

func (m MapColorToMutableBidderList) Clear() {
	wasmlib.Clear(m.objID)
}

func (m MapColorToMutableBidderList) GetBidderList(key wasmlib.ScColor) MutableBidderList {
	subID := wasmlib.GetObjectID(m.objID, key.KeyID(), wasmlib.TYPE_ARRAY|wasmlib.TYPE_AGENT_ID)
	return MutableBidderList{objID: subID}
}

type MapColorToMutableBids struct {
	objID int32
}

func (m MapColorToMutableBids) Clear() {
	wasmlib.Clear(m.objID)
}

func (m MapColorToMutableBids) GetBids(key wasmlib.ScColor) MutableBids {
	subID := wasmlib.GetObjectID(m.objID, key.KeyID(), wasmlib.TYPE_MAP)
	return MutableBids{objID: subID}
}

type MutableFairAuctionState struct {
	id int32
}

func (s MutableFairAuctionState) Auctions() MapColorToMutableAuction {
	mapID := wasmlib.GetObjectID(s.id, idxMap[IdxStateAuctions], wasmlib.TYPE_MAP)
	return MapColorToMutableAuction{objID: mapID}
}

func (s MutableFairAuctionState) BidderList() MapColorToMutableBidderList {
	mapID := wasmlib.GetObjectID(s.id, idxMap[IdxStateBidderList], wasmlib.TYPE_MAP)
	return MapColorToMutableBidderList{objID: mapID}
}

func (s MutableFairAuctionState) Bids() MapColorToMutableBids {
	mapID := wasmlib.GetObjectID(s.id, idxMap[IdxStateBids], wasmlib.TYPE_MAP)
	return MapColorToMutableBids{objID: mapID}
}

func (s MutableFairAuctionState) OwnerMargin() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxStateOwnerMargin])
}
