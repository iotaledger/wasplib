// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package fairauction

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type MapColorToMutableAuction struct {
	objId int32
}

func (m MapColorToMutableAuction) Clear() {
	wasmlib.Clear(m.objId)
}

func (m MapColorToMutableAuction) GetAuction(key wasmlib.ScColor) MutableAuction {
	return MutableAuction{objId: m.objId, keyId: key.KeyId()}
}

type MapColorToMutableBidderList struct {
	objId int32
}

func (m MapColorToMutableBidderList) Clear() {
	wasmlib.Clear(m.objId)
}

func (m MapColorToMutableBidderList) GetBidderList(key wasmlib.ScColor) MutableBidderList {
	subId := wasmlib.GetObjectId(m.objId, key.KeyId(), wasmlib.TYPE_ARRAY|wasmlib.TYPE_AGENT_ID)
	return MutableBidderList{objId: subId}
}

type MapColorToMutableBids struct {
	objId int32
}

func (m MapColorToMutableBids) Clear() {
	wasmlib.Clear(m.objId)
}

func (m MapColorToMutableBids) GetBids(key wasmlib.ScColor) MutableBids {
	subId := wasmlib.GetObjectId(m.objId, key.KeyId(), wasmlib.TYPE_MAP)
	return MutableBids{objId: subId}
}

type FairAuctionFuncState struct {
	stateId int32
}

func (s FairAuctionFuncState) Auctions() MapColorToMutableAuction {
	mapId := wasmlib.GetObjectId(s.stateId, idxMap[IdxVarAuctions], wasmlib.TYPE_MAP)
	return MapColorToMutableAuction{objId: mapId}
}

func (s FairAuctionFuncState) BidderList() MapColorToMutableBidderList {
	mapId := wasmlib.GetObjectId(s.stateId, idxMap[IdxVarBidderList], wasmlib.TYPE_MAP)
	return MapColorToMutableBidderList{objId: mapId}
}

func (s FairAuctionFuncState) Bids() MapColorToMutableBids {
	mapId := wasmlib.GetObjectId(s.stateId, idxMap[IdxVarBids], wasmlib.TYPE_MAP)
	return MapColorToMutableBids{objId: mapId}
}

func (s FairAuctionFuncState) OwnerMargin() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.stateId, idxMap[IdxVarOwnerMargin])
}

type MapColorToImmutableAuction struct {
	objId int32
}

func (m MapColorToImmutableAuction) GetAuction(key wasmlib.ScColor) ImmutableAuction {
	return ImmutableAuction{objId: m.objId, keyId: key.KeyId()}
}

type MapColorToImmutableBidderList struct {
	objId int32
}

func (m MapColorToImmutableBidderList) GetBidderList(key wasmlib.ScColor) ImmutableBidderList {
	subId := wasmlib.GetObjectId(m.objId, key.KeyId(), wasmlib.TYPE_ARRAY|wasmlib.TYPE_AGENT_ID)
	return ImmutableBidderList{objId: subId}
}

type MapColorToImmutableBids struct {
	objId int32
}

func (m MapColorToImmutableBids) GetBids(key wasmlib.ScColor) ImmutableBids {
	subId := wasmlib.GetObjectId(m.objId, key.KeyId(), wasmlib.TYPE_MAP)
	return ImmutableBids{objId: subId}
}

type FairAuctionViewState struct {
	stateId int32
}

func (s FairAuctionViewState) Auctions() MapColorToImmutableAuction {
	mapId := wasmlib.GetObjectId(s.stateId, idxMap[IdxVarAuctions], wasmlib.TYPE_MAP)
	return MapColorToImmutableAuction{objId: mapId}
}

func (s FairAuctionViewState) BidderList() MapColorToImmutableBidderList {
	mapId := wasmlib.GetObjectId(s.stateId, idxMap[IdxVarBidderList], wasmlib.TYPE_MAP)
	return MapColorToImmutableBidderList{objId: mapId}
}

func (s FairAuctionViewState) Bids() MapColorToImmutableBids {
	mapId := wasmlib.GetObjectId(s.stateId, idxMap[IdxVarBids], wasmlib.TYPE_MAP)
	return MapColorToImmutableBids{objId: mapId}
}

func (s FairAuctionViewState) OwnerMargin() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.stateId, idxMap[IdxVarOwnerMargin])
}
