// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package fairauction

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type FairAuctionFunc struct {
	sc wasmlib.ScContractFunc
}

func NewFairAuctionFunc(ctx wasmlib.ScFuncContext) *FairAuctionFunc {
	return &FairAuctionFunc{sc: wasmlib.NewScContractFunc(ctx, HScName)}
}

func (f *FairAuctionFunc) Delay(seconds int64) *FairAuctionFunc {
	f.sc.Delay(seconds)
	return f
}

func (f *FairAuctionFunc) OfContract(contract wasmlib.ScHname) *FairAuctionFunc {
	f.sc.OfContract(contract)
	return f
}

func (f *FairAuctionFunc) Post() *FairAuctionFunc {
	f.sc.Post()
	return f
}

func (f *FairAuctionFunc) PostToChain(chainId wasmlib.ScChainId) *FairAuctionFunc {
	f.sc.PostToChain(chainId)
	return f
}

func (f *FairAuctionFunc) FinalizeAuction(params MutableFuncFinalizeAuctionParams, transfer wasmlib.ScTransfers) {
	f.sc.Run(HFuncFinalizeAuction, params.id, &transfer)
}

func (f *FairAuctionFunc) PlaceBid(params MutableFuncPlaceBidParams, transfer wasmlib.ScTransfers) {
	f.sc.Run(HFuncPlaceBid, params.id, &transfer)
}

func (f *FairAuctionFunc) SetOwnerMargin(params MutableFuncSetOwnerMarginParams, transfer wasmlib.ScTransfers) {
	f.sc.Run(HFuncSetOwnerMargin, params.id, &transfer)
}

func (f *FairAuctionFunc) StartAuction(params MutableFuncStartAuctionParams, transfer wasmlib.ScTransfers) {
	f.sc.Run(HFuncStartAuction, params.id, &transfer)
}

func (f *FairAuctionFunc) GetInfo(params MutableViewGetInfoParams) ImmutableViewGetInfoResults {
	f.sc.Run(HViewGetInfo, params.id, nil)
	return ImmutableViewGetInfoResults{id: f.sc.ResultMapId()}
}

type FairAuctionView struct {
	sc wasmlib.ScContractView
}

func NewFairAuctionView(ctx wasmlib.ScViewContext) *FairAuctionView {
	return &FairAuctionView{sc: wasmlib.NewScContractView(ctx, HScName)}
}

func (v *FairAuctionView) OfContract(contract wasmlib.ScHname) *FairAuctionView {
	v.sc.OfContract(contract)
	return v
}

func (v *FairAuctionView) GetInfo(params MutableViewGetInfoParams) ImmutableViewGetInfoResults {
	v.sc.Run(HViewGetInfo, params.id)
	return ImmutableViewGetInfoResults{id: v.sc.ResultMapId()}
}
