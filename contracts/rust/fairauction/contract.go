// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package fairauction

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type FinalizeAuctionCall struct {
	Func *wasmlib.ScFunc
	Params MutableFinalizeAuctionParams
}

func NewFinalizeAuctionCall(ctx wasmlib.ScFuncContext) *FinalizeAuctionCall {
	f := &FinalizeAuctionCall{Func: wasmlib.NewScFunc(HScName, HFuncFinalizeAuction)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

type PlaceBidCall struct {
	Func *wasmlib.ScFunc
	Params MutablePlaceBidParams
}

func NewPlaceBidCall(ctx wasmlib.ScFuncContext) *PlaceBidCall {
	f := &PlaceBidCall{Func: wasmlib.NewScFunc(HScName, HFuncPlaceBid)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

type SetOwnerMarginCall struct {
	Func *wasmlib.ScFunc
	Params MutableSetOwnerMarginParams
}

func NewSetOwnerMarginCall(ctx wasmlib.ScFuncContext) *SetOwnerMarginCall {
	f := &SetOwnerMarginCall{Func: wasmlib.NewScFunc(HScName, HFuncSetOwnerMargin)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

type StartAuctionCall struct {
	Func *wasmlib.ScFunc
	Params MutableStartAuctionParams
}

func NewStartAuctionCall(ctx wasmlib.ScFuncContext) *StartAuctionCall {
	f := &StartAuctionCall{Func: wasmlib.NewScFunc(HScName, HFuncStartAuction)}
	f.Func.SetPtrs(&f.Params.id, nil)
	return f
}

type GetInfoCall struct {
	Func *wasmlib.ScView
	Params MutableGetInfoParams
	Results ImmutableGetInfoResults
}

func NewGetInfoCall(ctx wasmlib.ScFuncContext) *GetInfoCall {
	f := &GetInfoCall{Func: wasmlib.NewScView(HScName, HViewGetInfo)}
	f.Func.SetPtrs(&f.Params.id, &f.Results.id)
	return f
}

func NewGetInfoCallFromView(ctx wasmlib.ScViewContext) *GetInfoCall {
	return NewGetInfoCall(wasmlib.ScFuncContext{})
}
