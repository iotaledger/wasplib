// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package fairauction

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ImmutableBidderList = ArrayOfImmutableAgentId

type ArrayOfImmutableAgentId struct {
	objId int32
}

func (a ArrayOfImmutableAgentId) Length() int32 {
	return wasmlib.GetLength(a.objId)
}

func (a ArrayOfImmutableAgentId) GetAgentId(index int32) wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(a.objId, wasmlib.Key32(index))
}

type MutableBidderList = ArrayOfMutableAgentId

type ArrayOfMutableAgentId struct {
	objId int32
}

func (a ArrayOfMutableAgentId) Clear() {
	wasmlib.Clear(a.objId)
}

func (a ArrayOfMutableAgentId) Length() int32 {
	return wasmlib.GetLength(a.objId)
}

func (a ArrayOfMutableAgentId) GetAgentId(index int32) wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(a.objId, wasmlib.Key32(index))
}

type ImmutableBids = MapAgentIdToImmutableBid

type MapAgentIdToImmutableBid struct {
	objId int32
}

func (m MapAgentIdToImmutableBid) GetBid(key wasmlib.ScAgentId) ImmutableBid {
	return ImmutableBid{objId: m.objId, keyId: key.KeyId()}
}

type MutableBids = MapAgentIdToMutableBid

type MapAgentIdToMutableBid struct {
	objId int32
}

func (m MapAgentIdToMutableBid) Clear() {
	wasmlib.Clear(m.objId)
}

func (m MapAgentIdToMutableBid) GetBid(key wasmlib.ScAgentId) MutableBid {
	return MutableBid{objId: m.objId, keyId: key.KeyId()}
}
