// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package inccounter

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type MutableFuncCallIncrementParams struct {
	id int32
}

type ImmutableFuncCallIncrementParams struct {
	id int32
}

type MutableFuncCallIncrementRecurse5xParams struct {
	id int32
}

type ImmutableFuncCallIncrementRecurse5xParams struct {
	id int32
}

type MutableFuncIncrementParams struct {
	id int32
}

type ImmutableFuncIncrementParams struct {
	id int32
}

type MutableFuncInitParams struct {
	id int32
}

func (s MutableFuncInitParams) Counter() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamCounter])
}

type ImmutableFuncInitParams struct {
	id int32
}

func (s ImmutableFuncInitParams) Counter() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamCounter])
}

type MutableFuncLocalStateInternalCallParams struct {
	id int32
}

type ImmutableFuncLocalStateInternalCallParams struct {
	id int32
}

type MutableFuncLocalStatePostParams struct {
	id int32
}

type ImmutableFuncLocalStatePostParams struct {
	id int32
}

type MutableFuncLocalStateSandboxCallParams struct {
	id int32
}

type ImmutableFuncLocalStateSandboxCallParams struct {
	id int32
}

type MutableFuncLoopParams struct {
	id int32
}

type ImmutableFuncLoopParams struct {
	id int32
}

type MutableFuncPostIncrementParams struct {
	id int32
}

type ImmutableFuncPostIncrementParams struct {
	id int32
}

type MutableFuncRepeatManyParams struct {
	id int32
}

func (s MutableFuncRepeatManyParams) NumRepeats() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamNumRepeats])
}

type ImmutableFuncRepeatManyParams struct {
	id int32
}

func (s ImmutableFuncRepeatManyParams) NumRepeats() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamNumRepeats])
}

type MutableFuncTestLeb128Params struct {
	id int32
}

type ImmutableFuncTestLeb128Params struct {
	id int32
}

type MutableFuncWhenMustIncrementParams struct {
	id int32
}

type ImmutableFuncWhenMustIncrementParams struct {
	id int32
}

type MutableViewGetCounterParams struct {
	id int32
}

type ImmutableViewGetCounterParams struct {
	id int32
}
