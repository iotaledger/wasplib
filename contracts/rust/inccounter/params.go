// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package inccounter

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ImmutableFuncInitParams struct {
	id int32
}

func (s ImmutableFuncInitParams) Counter() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamCounter])
}

type MutableFuncInitParams struct {
	id int32
}

func NewMutableFuncInitParams() MutableFuncInitParams {
	return MutableFuncInitParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncInitParams) Counter() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamCounter])
}

type ImmutableFuncRepeatManyParams struct {
	id int32
}

func (s ImmutableFuncRepeatManyParams) NumRepeats() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamNumRepeats])
}

type MutableFuncRepeatManyParams struct {
	id int32
}

func NewMutableFuncRepeatManyParams() MutableFuncRepeatManyParams {
	return MutableFuncRepeatManyParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncRepeatManyParams) NumRepeats() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamNumRepeats])
}

type ImmutableFuncWhenMustIncrementParams struct {
	id int32
}

func (s ImmutableFuncWhenMustIncrementParams) Dummy() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamDummy])
}

type MutableFuncWhenMustIncrementParams struct {
	id int32
}

func NewMutableFuncWhenMustIncrementParams() MutableFuncWhenMustIncrementParams {
	return MutableFuncWhenMustIncrementParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncWhenMustIncrementParams) Dummy() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamDummy])
}
