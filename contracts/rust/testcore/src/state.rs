// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use wasmlib::host::*;

use crate::*;

pub struct TestCoreFuncState {
    pub(crate) state_id: i32,
}

impl TestCoreFuncState {
    pub fn counter(&self) -> ScMutableInt64 {
        ScMutableInt64::new(self.state_id, VAR_COUNTER.get_key_id())
    }

    pub fn hname_ep(&self) -> ScMutableHname {
        ScMutableHname::new(self.state_id, VAR_HNAME_EP.get_key_id())
    }

    pub fn minted_color(&self) -> ScMutableColor {
        ScMutableColor::new(self.state_id, VAR_MINTED_COLOR.get_key_id())
    }

    pub fn minted_supply(&self) -> ScMutableInt64 {
        ScMutableInt64::new(self.state_id, VAR_MINTED_SUPPLY.get_key_id())
    }
}

pub struct TestCoreViewState {
    pub(crate) state_id: i32,
}

impl TestCoreViewState {
    pub fn counter(&self) -> ScImmutableInt64 {
        ScImmutableInt64::new(self.state_id, VAR_COUNTER.get_key_id())
    }

    pub fn hname_ep(&self) -> ScImmutableHname {
        ScImmutableHname::new(self.state_id, VAR_HNAME_EP.get_key_id())
    }

    pub fn minted_color(&self) -> ScImmutableColor {
        ScImmutableColor::new(self.state_id, VAR_MINTED_COLOR.get_key_id())
    }

    pub fn minted_supply(&self) -> ScImmutableInt64 {
        ScImmutableInt64::new(self.state_id, VAR_MINTED_SUPPLY.get_key_id())
    }
}
