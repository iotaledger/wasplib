// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package testcore

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ImmutableFuncCallOnChainParams struct {
	id int32
}

func (s ImmutableFuncCallOnChainParams) HnameContract() wasmlib.ScImmutableHname {
	return wasmlib.NewScImmutableHname(s.id, idxMap[IdxParamHnameContract])
}

func (s ImmutableFuncCallOnChainParams) HnameEP() wasmlib.ScImmutableHname {
	return wasmlib.NewScImmutableHname(s.id, idxMap[IdxParamHnameEP])
}

func (s ImmutableFuncCallOnChainParams) IntValue() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamIntValue])
}

type MutableFuncCallOnChainParams struct {
	id int32
}

func NewMutableFuncCallOnChainParams() MutableFuncCallOnChainParams {
	return MutableFuncCallOnChainParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncCallOnChainParams) HnameContract() wasmlib.ScMutableHname {
	return wasmlib.NewScMutableHname(s.id, idxMap[IdxParamHnameContract])
}

func (s MutableFuncCallOnChainParams) HnameEP() wasmlib.ScMutableHname {
	return wasmlib.NewScMutableHname(s.id, idxMap[IdxParamHnameEP])
}

func (s MutableFuncCallOnChainParams) IntValue() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamIntValue])
}

type ImmutableFuncCheckContextFromFullEPParams struct {
	id int32
}

func (s ImmutableFuncCheckContextFromFullEPParams) AgentId() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamAgentId])
}

func (s ImmutableFuncCheckContextFromFullEPParams) Caller() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamCaller])
}

func (s ImmutableFuncCheckContextFromFullEPParams) ChainId() wasmlib.ScImmutableChainId {
	return wasmlib.NewScImmutableChainId(s.id, idxMap[IdxParamChainId])
}

func (s ImmutableFuncCheckContextFromFullEPParams) ChainOwnerId() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamChainOwnerId])
}

func (s ImmutableFuncCheckContextFromFullEPParams) ContractCreator() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamContractCreator])
}

type MutableFuncCheckContextFromFullEPParams struct {
	id int32
}

func NewMutableFuncCheckContextFromFullEPParams() MutableFuncCheckContextFromFullEPParams {
	return MutableFuncCheckContextFromFullEPParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncCheckContextFromFullEPParams) AgentId() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamAgentId])
}

func (s MutableFuncCheckContextFromFullEPParams) Caller() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamCaller])
}

func (s MutableFuncCheckContextFromFullEPParams) ChainId() wasmlib.ScMutableChainId {
	return wasmlib.NewScMutableChainId(s.id, idxMap[IdxParamChainId])
}

func (s MutableFuncCheckContextFromFullEPParams) ChainOwnerId() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamChainOwnerId])
}

func (s MutableFuncCheckContextFromFullEPParams) ContractCreator() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamContractCreator])
}

type ImmutableFuncPassTypesFullParams struct {
	id int32
}

func (s ImmutableFuncPassTypesFullParams) Hash() wasmlib.ScImmutableHash {
	return wasmlib.NewScImmutableHash(s.id, idxMap[IdxParamHash])
}

func (s ImmutableFuncPassTypesFullParams) Hname() wasmlib.ScImmutableHname {
	return wasmlib.NewScImmutableHname(s.id, idxMap[IdxParamHname])
}

func (s ImmutableFuncPassTypesFullParams) HnameZero() wasmlib.ScImmutableHname {
	return wasmlib.NewScImmutableHname(s.id, idxMap[IdxParamHnameZero])
}

func (s ImmutableFuncPassTypesFullParams) Int64() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamInt64])
}

func (s ImmutableFuncPassTypesFullParams) Int64Zero() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamInt64Zero])
}

func (s ImmutableFuncPassTypesFullParams) String() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxParamString])
}

func (s ImmutableFuncPassTypesFullParams) StringZero() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxParamStringZero])
}

type MutableFuncPassTypesFullParams struct {
	id int32
}

func NewMutableFuncPassTypesFullParams() MutableFuncPassTypesFullParams {
	return MutableFuncPassTypesFullParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncPassTypesFullParams) Hash() wasmlib.ScMutableHash {
	return wasmlib.NewScMutableHash(s.id, idxMap[IdxParamHash])
}

func (s MutableFuncPassTypesFullParams) Hname() wasmlib.ScMutableHname {
	return wasmlib.NewScMutableHname(s.id, idxMap[IdxParamHname])
}

func (s MutableFuncPassTypesFullParams) HnameZero() wasmlib.ScMutableHname {
	return wasmlib.NewScMutableHname(s.id, idxMap[IdxParamHnameZero])
}

func (s MutableFuncPassTypesFullParams) Int64() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamInt64])
}

func (s MutableFuncPassTypesFullParams) Int64Zero() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamInt64Zero])
}

func (s MutableFuncPassTypesFullParams) String() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxParamString])
}

func (s MutableFuncPassTypesFullParams) StringZero() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxParamStringZero])
}

type ImmutableFuncRunRecursionParams struct {
	id int32
}

func (s ImmutableFuncRunRecursionParams) IntValue() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamIntValue])
}

type MutableFuncRunRecursionParams struct {
	id int32
}

func NewMutableFuncRunRecursionParams() MutableFuncRunRecursionParams {
	return MutableFuncRunRecursionParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncRunRecursionParams) IntValue() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamIntValue])
}

type ImmutableFuncSendToAddressParams struct {
	id int32
}

func (s ImmutableFuncSendToAddressParams) Address() wasmlib.ScImmutableAddress {
	return wasmlib.NewScImmutableAddress(s.id, idxMap[IdxParamAddress])
}

type MutableFuncSendToAddressParams struct {
	id int32
}

func NewMutableFuncSendToAddressParams() MutableFuncSendToAddressParams {
	return MutableFuncSendToAddressParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncSendToAddressParams) Address() wasmlib.ScMutableAddress {
	return wasmlib.NewScMutableAddress(s.id, idxMap[IdxParamAddress])
}

type ImmutableFuncSetIntParams struct {
	id int32
}

func (s ImmutableFuncSetIntParams) IntValue() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamIntValue])
}

func (s ImmutableFuncSetIntParams) Name() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxParamName])
}

type MutableFuncSetIntParams struct {
	id int32
}

func NewMutableFuncSetIntParams() MutableFuncSetIntParams {
	return MutableFuncSetIntParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncSetIntParams) IntValue() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamIntValue])
}

func (s MutableFuncSetIntParams) Name() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxParamName])
}

type ImmutableFuncTestEventLogGenericDataParams struct {
	id int32
}

func (s ImmutableFuncTestEventLogGenericDataParams) Counter() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamCounter])
}

type MutableFuncTestEventLogGenericDataParams struct {
	id int32
}

func NewMutableFuncTestEventLogGenericDataParams() MutableFuncTestEventLogGenericDataParams {
	return MutableFuncTestEventLogGenericDataParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncTestEventLogGenericDataParams) Counter() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamCounter])
}

type ImmutableFuncWithdrawToChainParams struct {
	id int32
}

func (s ImmutableFuncWithdrawToChainParams) ChainId() wasmlib.ScImmutableChainId {
	return wasmlib.NewScImmutableChainId(s.id, idxMap[IdxParamChainId])
}

type MutableFuncWithdrawToChainParams struct {
	id int32
}

func NewMutableFuncWithdrawToChainParams() MutableFuncWithdrawToChainParams {
	return MutableFuncWithdrawToChainParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableFuncWithdrawToChainParams) ChainId() wasmlib.ScMutableChainId {
	return wasmlib.NewScMutableChainId(s.id, idxMap[IdxParamChainId])
}

type ImmutableViewCheckContextFromViewEPParams struct {
	id int32
}

func (s ImmutableViewCheckContextFromViewEPParams) AgentId() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamAgentId])
}

func (s ImmutableViewCheckContextFromViewEPParams) ChainId() wasmlib.ScImmutableChainId {
	return wasmlib.NewScImmutableChainId(s.id, idxMap[IdxParamChainId])
}

func (s ImmutableViewCheckContextFromViewEPParams) ChainOwnerId() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamChainOwnerId])
}

func (s ImmutableViewCheckContextFromViewEPParams) ContractCreator() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamContractCreator])
}

type MutableViewCheckContextFromViewEPParams struct {
	id int32
}

func NewMutableViewCheckContextFromViewEPParams() MutableViewCheckContextFromViewEPParams {
	return MutableViewCheckContextFromViewEPParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableViewCheckContextFromViewEPParams) AgentId() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamAgentId])
}

func (s MutableViewCheckContextFromViewEPParams) ChainId() wasmlib.ScMutableChainId {
	return wasmlib.NewScMutableChainId(s.id, idxMap[IdxParamChainId])
}

func (s MutableViewCheckContextFromViewEPParams) ChainOwnerId() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamChainOwnerId])
}

func (s MutableViewCheckContextFromViewEPParams) ContractCreator() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamContractCreator])
}

type ImmutableViewFibonacciParams struct {
	id int32
}

func (s ImmutableViewFibonacciParams) IntValue() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamIntValue])
}

type MutableViewFibonacciParams struct {
	id int32
}

func NewMutableViewFibonacciParams() MutableViewFibonacciParams {
	return MutableViewFibonacciParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableViewFibonacciParams) IntValue() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamIntValue])
}

type ImmutableViewGetIntParams struct {
	id int32
}

func (s ImmutableViewGetIntParams) Name() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxParamName])
}

type MutableViewGetIntParams struct {
	id int32
}

func NewMutableViewGetIntParams() MutableViewGetIntParams {
	return MutableViewGetIntParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableViewGetIntParams) Name() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxParamName])
}

type ImmutableViewPassTypesViewParams struct {
	id int32
}

func (s ImmutableViewPassTypesViewParams) Hash() wasmlib.ScImmutableHash {
	return wasmlib.NewScImmutableHash(s.id, idxMap[IdxParamHash])
}

func (s ImmutableViewPassTypesViewParams) Hname() wasmlib.ScImmutableHname {
	return wasmlib.NewScImmutableHname(s.id, idxMap[IdxParamHname])
}

func (s ImmutableViewPassTypesViewParams) HnameZero() wasmlib.ScImmutableHname {
	return wasmlib.NewScImmutableHname(s.id, idxMap[IdxParamHnameZero])
}

func (s ImmutableViewPassTypesViewParams) Int64() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamInt64])
}

func (s ImmutableViewPassTypesViewParams) Int64Zero() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamInt64Zero])
}

func (s ImmutableViewPassTypesViewParams) String() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxParamString])
}

func (s ImmutableViewPassTypesViewParams) StringZero() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxParamStringZero])
}

type MutableViewPassTypesViewParams struct {
	id int32
}

func NewMutableViewPassTypesViewParams() MutableViewPassTypesViewParams {
	return MutableViewPassTypesViewParams{id: wasmlib.NewScMutableMap().MapId()}
}

func (s MutableViewPassTypesViewParams) Hash() wasmlib.ScMutableHash {
	return wasmlib.NewScMutableHash(s.id, idxMap[IdxParamHash])
}

func (s MutableViewPassTypesViewParams) Hname() wasmlib.ScMutableHname {
	return wasmlib.NewScMutableHname(s.id, idxMap[IdxParamHname])
}

func (s MutableViewPassTypesViewParams) HnameZero() wasmlib.ScMutableHname {
	return wasmlib.NewScMutableHname(s.id, idxMap[IdxParamHnameZero])
}

func (s MutableViewPassTypesViewParams) Int64() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamInt64])
}

func (s MutableViewPassTypesViewParams) Int64Zero() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamInt64Zero])
}

func (s MutableViewPassTypesViewParams) String() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxParamString])
}

func (s MutableViewPassTypesViewParams) StringZero() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxParamStringZero])
}
