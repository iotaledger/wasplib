{
  "name": "TestCore",
  "description": "Core test for ISCP wasmlib Rust/Wasm library",
  "types": {
  },
  "state": {
    "counter": "Int64",
    "hnameEP": "Hname",
    "mintedColor": "Color",
    "mintedSupply": "Int64"
  },
  "funcs": {
    "callOnChain": {
      "params": {
        "intValue=intParamValue": "Int64",
        "hnameContract": "?Hname",
        "hnameEP": "?Hname"
      },
      "results": {
        "intValue=intParamValue": "Int64"
      }
    },
    "checkContextFromFullEP": {
      "params": {
        "agentId=agentID": "AgentId",
        "caller": "AgentId",
        "chainId=chainID": "ChainId",
        "chainOwnerId=chainOwnerID": "AgentId",
        "contractCreator": "AgentId"
      }
    },
    "doNothing": {
    },
    "getMintedSupply": {
      "results": {
        "mintedColor": "Color",
        "mintedSupply": "Int64"
      }
    },
    "incCounter": {
    },
    "init": {
    },
    "passTypesFull": {
      "params": {
        "int64": "Int64",
        "int64Zero=int64-0": "Int64",
        "string": "String",
        "stringZero=string-0": "String",
        "hash=Hash": "Hash",
        "hname=Hname": "Hname",
        "hnameZero=Hname-0": "Hname"
      }
    },
    "runRecursion": {
      "params": {
        "intValue=intParamValue": "Int64"
      },
      "results": {
        "intValue=intParamValue": "Int64"
      }
    },
    "sendToAddress": {
      "access": "creator",
      "params": {
        "address": "Address"
      }
    },
    "setInt": {
      "params": {
        "name=intParamName": "String",
        "intValue=intParamValue": "Int64"
      }
    },
    "testCallPanicFullEP": {
    },
    "testCallPanicViewEPFromFull": {
    },
    "testChainOwnerIDFull": {
      "results": {
        "chainOwnerId=chainOwnerID": "AgentId"
      }
    },
    "testEventLogDeploy": {
    },
    "testEventLogEventData": {
    },
    "testEventLogGenericData": {
      "params": {
        "counter": "Int64"
      }
    },
    "testPanicFullEP": {
    },
    "withdrawToChain": {
      "params": {
        "chainId=chainID": "ChainId"
      }
    }
  },
  "views": {
    "checkContextFromViewEP": {
      "params": {
        "agentId=agentID": "AgentId",
        "chainId=chainID": "ChainId",
        "chainOwnerId=chainOwnerID": "AgentId",
        "contractCreator": "AgentId"
      }
    },
    "fibonacci": {
      "params": {
        "intValue=intParamValue": "Int64"
      },
      "results": {
        "intValue=intParamValue": "Int64"
      }
    },
    "getCounter": {
      "results": {
        "counter": "Int64"
      }
    },
    "getInt": {
      "params": {
        "name=intParamName": "String"
      }
    },
    "justView": {
    },
    "passTypesView": {
      "params": {
        "int64": "Int64",
        "int64Zero=int64-0": "Int64",
        "string": "String",
        "stringZero=string-0": "String",
        "hash=Hash": "Hash",
        "hname=Hname": "Hname",
        "hnameZero=Hname-0": "Hname"
      }
    },
    "testCallPanicViewEPFromView": {
    },
    "testChainOwnerIDView": {
      "results": {
        "chainOwnerId=chainOwnerID": "AgentId"
      }
    },
    "testPanicViewEP": {
    },
    "testSandboxCall": {
      "results": {
        "sandboxCall": "String"
      }
    }
  }
}
