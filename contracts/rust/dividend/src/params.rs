// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use wasmlib::host::*;

use crate::*;
use crate::keys::*;

pub struct MutableFuncDivideParams {
    pub(crate) id: i32,
}

pub struct ImmutableFuncDivideParams {
    pub(crate) id: i32,
}

pub struct MutableFuncInitParams {
    pub(crate) id: i32,
}

impl MutableFuncInitParams {
    pub fn owner(&self) -> ScMutableAgentId {
        ScMutableAgentId::new(self.id, idx_map(IDX_PARAM_OWNER))
    }
}

pub struct ImmutableFuncInitParams {
    pub(crate) id: i32,
}

impl ImmutableFuncInitParams {
    pub fn owner(&self) -> ScImmutableAgentId {
        ScImmutableAgentId::new(self.id, idx_map(IDX_PARAM_OWNER))
    }
}

pub struct MutableFuncMemberParams {
    pub(crate) id: i32,
}

impl MutableFuncMemberParams {
    pub fn address(&self) -> ScMutableAddress {
        ScMutableAddress::new(self.id, idx_map(IDX_PARAM_ADDRESS))
    }

    pub fn factor(&self) -> ScMutableInt64 {
        ScMutableInt64::new(self.id, idx_map(IDX_PARAM_FACTOR))
    }
}

pub struct ImmutableFuncMemberParams {
    pub(crate) id: i32,
}

impl ImmutableFuncMemberParams {
    pub fn address(&self) -> ScImmutableAddress {
        ScImmutableAddress::new(self.id, idx_map(IDX_PARAM_ADDRESS))
    }

    pub fn factor(&self) -> ScImmutableInt64 {
        ScImmutableInt64::new(self.id, idx_map(IDX_PARAM_FACTOR))
    }
}

pub struct MutableFuncSetOwnerParams {
    pub(crate) id: i32,
}

impl MutableFuncSetOwnerParams {
    pub fn owner(&self) -> ScMutableAgentId {
        ScMutableAgentId::new(self.id, idx_map(IDX_PARAM_OWNER))
    }
}

pub struct ImmutableFuncSetOwnerParams {
    pub(crate) id: i32,
}

impl ImmutableFuncSetOwnerParams {
    pub fn owner(&self) -> ScImmutableAgentId {
        ScImmutableAgentId::new(self.id, idx_map(IDX_PARAM_OWNER))
    }
}

pub struct MutableViewGetFactorParams {
    pub(crate) id: i32,
}

impl MutableViewGetFactorParams {
    pub fn address(&self) -> ScMutableAddress {
        ScMutableAddress::new(self.id, idx_map(IDX_PARAM_ADDRESS))
    }
}

pub struct ImmutableViewGetFactorParams {
    pub(crate) id: i32,
}

impl ImmutableViewGetFactorParams {
    pub fn address(&self) -> ScImmutableAddress {
        ScImmutableAddress::new(self.id, idx_map(IDX_PARAM_ADDRESS))
    }
}
