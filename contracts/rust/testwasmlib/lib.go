// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package testwasmlib

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

func OnLoad() {
	exports := wasmlib.NewScExports()
	exports.AddFunc(FuncParamTypes, funcParamTypesThunk)
}

type FuncParamTypesParams struct {
	Address   wasmlib.ScImmutableAddress
	AgentId   wasmlib.ScImmutableAgentId
	Bytes     wasmlib.ScImmutableBytes
	ChainId   wasmlib.ScImmutableChainId
	Color     wasmlib.ScImmutableColor
	Hash      wasmlib.ScImmutableHash
	Hname     wasmlib.ScImmutableHname
	Int64     wasmlib.ScImmutableInt64
	RequestId wasmlib.ScImmutableRequestId
	String    wasmlib.ScImmutableString
}

func funcParamTypesThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("testwasmlib.funcParamTypes")
	p := ctx.Params()
	params := &FuncParamTypesParams{
		Address:   p.GetAddress(ParamAddress),
		AgentId:   p.GetAgentId(ParamAgentId),
		Bytes:     p.GetBytes(ParamBytes),
		ChainId:   p.GetChainId(ParamChainId),
		Color:     p.GetColor(ParamColor),
		Hash:      p.GetHash(ParamHash),
		Hname:     p.GetHname(ParamHname),
		Int64:     p.GetInt64(ParamInt64),
		RequestId: p.GetRequestId(ParamRequestId),
		String:    p.GetString(ParamString),
	}
	funcParamTypes(ctx, params)
	ctx.Log("testwasmlib.funcParamTypes ok")
}
