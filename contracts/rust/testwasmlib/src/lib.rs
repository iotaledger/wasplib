// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

//@formatter:off

#![allow(dead_code)]

#![allow(unused_imports)]

use testwasmlib::*;
use wasmlib::*;
use wasmlib::host::*;

use crate::consts::*;
use crate::keys::*;
use crate::params::*;
use crate::results::*;
use crate::state::*;

mod consts;
mod keys;
mod params;
mod results;
mod state;
mod testwasmlib;

#[no_mangle]
fn on_load() {
    let exports = ScExports::new();
    exports.add_func(FUNC_PARAM_TYPES, func_param_types_thunk);

    unsafe {
        for i in 0..KEY_MAP_LEN {
            IDX_MAP[i] = get_key_id_from_string(KEY_MAP[i]);
        }
    }
}

pub struct FuncParamTypesContext {
    params: ImmutableFuncParamTypesParams,
    state:  MutableTestWasmLibState,
}

fn func_param_types_thunk(ctx: &ScFuncContext) {
    ctx.log("testwasmlib.funcParamTypes");
    let f = FuncParamTypesContext {
        params: ImmutableFuncParamTypesParams {
            id: get_object_id(1, KEY_PARAMS, TYPE_MAP),
        },
        state: MutableTestWasmLibState {
            id: get_object_id(1, KEY_STATE, TYPE_MAP),
        },
    };
    func_param_types(ctx, &f);
    ctx.log("testwasmlib.funcParamTypes ok");
}

//@formatter:on
