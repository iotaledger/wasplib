// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package testwasmlib

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ParamTypesCall struct {
	Func   wasmlib.ScFunc
	Params MutableParamTypesParams
}

func NewParamTypesCall(ctx wasmlib.ScFuncContext) *ParamTypesCall {
	f := &ParamTypesCall{}
	f.Func.Init(HScName, HFuncParamTypes, &f.Params.id, nil)
	return f
}

type BlockRecordCall struct {
	Func    wasmlib.ScView
	Params  MutableBlockRecordParams
	Results ImmutableBlockRecordResults
}

func NewBlockRecordCall(ctx wasmlib.ScFuncContext) *BlockRecordCall {
	f := &BlockRecordCall{}
	f.Func.Init(HScName, HViewBlockRecord, &f.Params.id, &f.Results.id)
	return f
}

func NewBlockRecordCallFromView(ctx wasmlib.ScViewContext) *BlockRecordCall {
	f := &BlockRecordCall{}
	f.Func.Init(HScName, HViewBlockRecord, &f.Params.id, &f.Results.id)
	return f
}

type BlockRecordsCall struct {
	Func    wasmlib.ScView
	Params  MutableBlockRecordsParams
	Results ImmutableBlockRecordsResults
}

func NewBlockRecordsCall(ctx wasmlib.ScFuncContext) *BlockRecordsCall {
	f := &BlockRecordsCall{}
	f.Func.Init(HScName, HViewBlockRecords, &f.Params.id, &f.Results.id)
	return f
}

func NewBlockRecordsCallFromView(ctx wasmlib.ScViewContext) *BlockRecordsCall {
	f := &BlockRecordsCall{}
	f.Func.Init(HScName, HViewBlockRecords, &f.Params.id, &f.Results.id)
	return f
}
