// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package testwasmlib

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type TestWasmLibFunc struct {
	sc wasmlib.ScContractFunc
}

func NewTestWasmLibFunc(ctx wasmlib.ScFuncContext) *TestWasmLibFunc {
	return &TestWasmLibFunc{sc: wasmlib.NewScContractFunc(ctx, HScName)}
}

func (f *TestWasmLibFunc) Delay(seconds int32) *TestWasmLibFunc {
	f.sc.Delay(seconds)
	return f
}

func (f *TestWasmLibFunc) OfContract(contract wasmlib.ScHname) *TestWasmLibFunc {
	f.sc.OfContract(contract)
	return f
}

func (f *TestWasmLibFunc) Post() *TestWasmLibFunc {
	f.sc.Post()
	return f
}

func (f *TestWasmLibFunc) PostToChain(chainId wasmlib.ScChainId) *TestWasmLibFunc {
	f.sc.PostToChain(chainId)
	return f
}

func (f *TestWasmLibFunc) ParamTypes(params MutableFuncParamTypesParams, transfer wasmlib.ScTransfers) {
	f.sc.Run(HFuncParamTypes, params.id, &transfer)
}

func (f *TestWasmLibFunc) BlockRecord(params MutableViewBlockRecordParams) ImmutableViewBlockRecordResults {
	f.sc.Run(HViewBlockRecord, params.id, nil)
	return ImmutableViewBlockRecordResults{id: f.sc.ResultMapId()}
}

func (f *TestWasmLibFunc) BlockRecords(params MutableViewBlockRecordsParams) ImmutableViewBlockRecordsResults {
	f.sc.Run(HViewBlockRecords, params.id, nil)
	return ImmutableViewBlockRecordsResults{id: f.sc.ResultMapId()}
}

type TestWasmLibView struct {
	sc wasmlib.ScContractView
}

func NewTestWasmLibView(ctx wasmlib.ScViewContext) *TestWasmLibView {
	return &TestWasmLibView{sc: wasmlib.NewScContractView(ctx, HScName)}
}

func (v *TestWasmLibView) OfContract(contract wasmlib.ScHname) *TestWasmLibView {
	v.sc.OfContract(contract)
	return v
}

func (v *TestWasmLibView) BlockRecord(params MutableViewBlockRecordParams) ImmutableViewBlockRecordResults {
	v.sc.Run(HViewBlockRecord, params.id)
	return ImmutableViewBlockRecordResults{id: v.sc.ResultMapId()}
}

func (v *TestWasmLibView) BlockRecords(params MutableViewBlockRecordsParams) ImmutableViewBlockRecordsResults {
	v.sc.Run(HViewBlockRecords, params.id)
	return ImmutableViewBlockRecordsResults{id: v.sc.ResultMapId()}
}
