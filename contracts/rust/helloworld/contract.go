// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package helloworld

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type HelloWorldFunc struct {
	sc wasmlib.ScContractFunc
}

func NewHelloWorldFunc(ctx wasmlib.ScFuncContext) *HelloWorldFunc {
	return &HelloWorldFunc{sc: wasmlib.NewScContractFunc(ctx, HScName)}
}

func (f *HelloWorldFunc) Delay(seconds int64) *HelloWorldFunc {
	f.sc.Delay(seconds)
	return f
}

func (f *HelloWorldFunc) OfContract(contract wasmlib.ScHname) *HelloWorldFunc {
	f.sc.OfContract(contract)
	return f
}

func (f *HelloWorldFunc) Post() *HelloWorldFunc {
	f.sc.Post()
	return f
}

func (f *HelloWorldFunc) PostToChain(chainId wasmlib.ScChainId) *HelloWorldFunc {
	f.sc.PostToChain(chainId)
	return f
}

func (f *HelloWorldFunc) HelloWorld(transfer wasmlib.ScTransfers) {
	f.sc.Run(HFuncHelloWorld, 0, &transfer)
}

func (f *HelloWorldFunc) GetHelloWorld() ImmutableViewGetHelloWorldResults {
	f.sc.Run(HViewGetHelloWorld, 0, nil)
	return ImmutableViewGetHelloWorldResults{id: f.sc.ResultMapId()}
}

type HelloWorldView struct {
	sc wasmlib.ScContractView
}

func NewHelloWorldView(ctx wasmlib.ScViewContext) *HelloWorldView {
	return &HelloWorldView{sc: wasmlib.NewScContractView(ctx, HScName)}
}

func (v *HelloWorldView) OfContract(contract wasmlib.ScHname) *HelloWorldView {
	v.sc.OfContract(contract)
	return v
}

func (v *HelloWorldView) GetHelloWorld() ImmutableViewGetHelloWorldResults {
	v.sc.Run(HViewGetHelloWorld, 0)
	return ImmutableViewGetHelloWorldResults{id: v.sc.ResultMapId()}
}
