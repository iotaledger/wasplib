// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]

use std::ptr;

use wasmlib::*;

use crate::consts::*;
use crate::params::*;
use crate::results::*;

pub struct HelloWorldCall {
    pub func: ScFunc,
}

impl HelloWorldCall {
    pub fn new(_ctx: &ScFuncContext) -> HelloWorldCall {
        let mut f = HelloWorldCall {
            func: ScFunc::zero(),
        };
        f.func = ScFunc::new(HSC_NAME, HFUNC_HELLO_WORLD, ptr::null_mut(), ptr::null_mut());
        f
    }
}

pub struct GetHelloWorldCall {
    pub func: ScView,
    pub results: ImmutableGetHelloWorldResults,
}

impl GetHelloWorldCall {
    pub fn new(_ctx: &ScFuncContext) -> GetHelloWorldCall {
        let mut f = GetHelloWorldCall {
            func: ScView::zero(),
            results: ImmutableGetHelloWorldResults { id: 0 },
        };
        f.func = ScView::new(HSC_NAME, HVIEW_GET_HELLO_WORLD, ptr::null_mut(), &mut f.results.id);
        f
    }

    pub fn new_from_view(_ctx: &ScViewContext) -> GetHelloWorldCall {
        let mut f = GetHelloWorldCall {
            func: ScView::zero(),
            results: ImmutableGetHelloWorldResults { id: 0 },
        };
        f.func = ScView::new(HSC_NAME, HVIEW_GET_HELLO_WORLD, ptr::null_mut(), &mut f.results.id);
        f
    }
}
