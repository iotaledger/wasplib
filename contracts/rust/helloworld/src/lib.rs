// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

#![allow(dead_code)]

use helloworld::*;
use wasmlib::*;
use wasmlib::host::*;

use crate::consts::*;
use crate::state::*;

mod consts;
mod state;
mod helloworld;

#[no_mangle]
fn on_load() {
    let exports = ScExports::new();
    exports.add_func(FUNC_HELLO_WORLD, func_hello_world_thunk);
    exports.add_view(VIEW_GET_HELLO_WORLD, view_get_hello_world_thunk);
}

pub struct FuncHelloWorldContext {
    state: HelloWorldFuncState,
}

fn func_hello_world_thunk(ctx: &ScFuncContext) {
    ctx.log("helloworld.funcHelloWorld");
//@formatter:off
    let f = FuncHelloWorldContext {
        state: HelloWorldFuncState {
            state_id: get_object_id(1, KEY_STATE.get_key_id(), TYPE_MAP),
        },
    };
//@formatter:on
    func_hello_world(ctx, &f);
    ctx.log("helloworld.funcHelloWorld ok");
}

pub struct ViewGetHelloWorldResults {
    pub hello_world: ScMutableString,
}

//@formatter:off
pub struct ViewGetHelloWorldContext {
    results: ViewGetHelloWorldResults,
    state:   HelloWorldViewState,
}
//@formatter:on

fn view_get_hello_world_thunk(ctx: &ScViewContext) {
    ctx.log("helloworld.viewGetHelloWorld");
    let r = ctx.results().map_id();
//@formatter:off
    let f = ViewGetHelloWorldContext {
        results: ViewGetHelloWorldResults {
            hello_world: ScMutableString::new(r, RESULT_HELLO_WORLD.get_key_id()),
        },
        state: HelloWorldViewState {
            state_id: get_object_id(1, KEY_STATE.get_key_id(), TYPE_MAP),
        },
    };
//@formatter:on
    view_get_hello_world(ctx, &f);
    ctx.log("helloworld.viewGetHelloWorld ok");
}
