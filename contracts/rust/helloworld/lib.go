// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package helloworld

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

func OnLoad() {
	exports := wasmlib.NewScExports()
	exports.AddFunc(FuncHelloWorld, funcHelloWorldThunk)
	exports.AddView(ViewGetHelloWorld, viewGetHelloWorldThunk)

	for i, key := range keyMap {
		idxMap[i] = key.KeyId()
	}
}

type HelloWorldContext struct {
	State MutableHelloWorldState
}

func funcHelloWorldThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("helloworld.funcHelloWorld")
	f := &HelloWorldContext{
		State: MutableHelloWorldState{
			id: wasmlib.GetObjectId(1, wasmlib.KeyState, wasmlib.TYPE_MAP),
		},
	}
	funcHelloWorld(ctx, f)
	ctx.Log("helloworld.funcHelloWorld ok")
}

type GetHelloWorldContext struct {
	Results MutableGetHelloWorldResults
	State   ImmutableHelloWorldState
}

func viewGetHelloWorldThunk(ctx wasmlib.ScViewContext) {
	ctx.Log("helloworld.viewGetHelloWorld")
	f := &GetHelloWorldContext{
		Results: MutableGetHelloWorldResults{
			id: wasmlib.GetObjectId(1, wasmlib.KeyResults, wasmlib.TYPE_MAP),
		},
		State: ImmutableHelloWorldState{
			id: wasmlib.GetObjectId(1, wasmlib.KeyState, wasmlib.TYPE_MAP),
		},
	}
	viewGetHelloWorld(ctx, f)
	ctx.Log("helloworld.viewGetHelloWorld ok")
}
