// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package helloworld

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

func OnLoad() {
	exports := wasmlib.NewScExports()
	exports.AddFunc(FuncHelloWorld, funcHelloWorldThunk)
	exports.AddView(ViewGetHelloWorld, viewGetHelloWorldThunk)

	for i, key := range keyMap {
		idxMap[i] = wasmlib.GetKeyIdFromString(key)
	}
}

type FuncHelloWorldContext struct {
	State HelloWorldFuncState
}

func funcHelloWorldThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("helloworld.funcHelloWorld")
	f := &FuncHelloWorldContext{
		State: HelloWorldFuncState{
			stateId: wasmlib.GetObjectId(1, wasmlib.KeyState.KeyId(), wasmlib.TYPE_MAP),
		},
	}
	funcHelloWorld(ctx, f)
	ctx.Log("helloworld.funcHelloWorld ok")
}

type ViewGetHelloWorldResults struct {
	HelloWorld wasmlib.ScMutableString
}

type ViewGetHelloWorldContext struct {
	Results ViewGetHelloWorldResults
	State   HelloWorldViewState
}

func viewGetHelloWorldThunk(ctx wasmlib.ScViewContext) {
	ctx.Log("helloworld.viewGetHelloWorld")
	r := ctx.Results().MapId()
	f := &ViewGetHelloWorldContext{
		Results: ViewGetHelloWorldResults{
			HelloWorld: wasmlib.NewScMutableString(r, idxMap[IdxResultHelloWorld]),
		},
		State: HelloWorldViewState{
			stateId: wasmlib.GetObjectId(1, wasmlib.KeyState.KeyId(), wasmlib.TYPE_MAP),
		},
	}
	viewGetHelloWorld(ctx, f)
	ctx.Log("helloworld.viewGetHelloWorld ok")
}
