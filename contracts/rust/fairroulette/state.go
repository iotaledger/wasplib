// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package fairroulette

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type ArrayOfImmutableBet struct {
	objId int32
}

func (a ArrayOfImmutableBet) Length() int32 {
	return wasmlib.GetLength(a.objId)
}

func (a ArrayOfImmutableBet) GetBet(index int32) ImmutableBet {
	return ImmutableBet{objId: a.objId, keyId: wasmlib.Key32(index)}
}

type ImmutableFairRouletteState struct {
	id int32
}

func (s ImmutableFairRouletteState) Bets() ArrayOfImmutableBet {
	arrId := wasmlib.GetObjectId(s.id, idxMap[IdxStateBets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableBet{objId: arrId}
}

func (s ImmutableFairRouletteState) LastWinningNumber() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxStateLastWinningNumber])
}

func (s ImmutableFairRouletteState) LockedBets() ArrayOfImmutableBet {
	arrId := wasmlib.GetObjectId(s.id, idxMap[IdxStateLockedBets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfImmutableBet{objId: arrId}
}

func (s ImmutableFairRouletteState) PlayPeriod() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxStatePlayPeriod])
}

type ArrayOfMutableBet struct {
	objId int32
}

func (a ArrayOfMutableBet) Clear() {
	wasmlib.Clear(a.objId)
}

func (a ArrayOfMutableBet) Length() int32 {
	return wasmlib.GetLength(a.objId)
}

func (a ArrayOfMutableBet) GetBet(index int32) MutableBet {
	return MutableBet{objId: a.objId, keyId: wasmlib.Key32(index)}
}

type MutableFairRouletteState struct {
	id int32
}

func (s MutableFairRouletteState) Bets() ArrayOfMutableBet {
	arrId := wasmlib.GetObjectId(s.id, idxMap[IdxStateBets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableBet{objId: arrId}
}

func (s MutableFairRouletteState) LastWinningNumber() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxStateLastWinningNumber])
}

func (s MutableFairRouletteState) LockedBets() ArrayOfMutableBet {
	arrId := wasmlib.GetObjectId(s.id, idxMap[IdxStateLockedBets], wasmlib.TYPE_ARRAY|wasmlib.TYPE_BYTES)
	return ArrayOfMutableBet{objId: arrId}
}

func (s MutableFairRouletteState) PlayPeriod() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxStatePlayPeriod])
}
