// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package fairroulette

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type LockBetsCall struct {
	Func wasmlib.ScFunc
}

func NewLockBetsCall(ctx wasmlib.ScFuncContext) *LockBetsCall {
	f := &LockBetsCall{}
	f.Func.Init(HScName, HFuncLockBets, nil, nil)
	return f
}

type PayWinnersCall struct {
	Func wasmlib.ScFunc
}

func NewPayWinnersCall(ctx wasmlib.ScFuncContext) *PayWinnersCall {
	f := &PayWinnersCall{}
	f.Func.Init(HScName, HFuncPayWinners, nil, nil)
	return f
}

type PlaceBetCall struct {
	Func   wasmlib.ScFunc
	Params MutablePlaceBetParams
}

func NewPlaceBetCall(ctx wasmlib.ScFuncContext) *PlaceBetCall {
	f := &PlaceBetCall{}
	f.Func.Init(HScName, HFuncPlaceBet, &f.Params.id, nil)
	return f
}

type PlayPeriodCall struct {
	Func   wasmlib.ScFunc
	Params MutablePlayPeriodParams
}

func NewPlayPeriodCall(ctx wasmlib.ScFuncContext) *PlayPeriodCall {
	f := &PlayPeriodCall{}
	f.Func.Init(HScName, HFuncPlayPeriod, &f.Params.id, nil)
	return f
}

type LastWinningNumberCall struct {
	Func    wasmlib.ScView
	Results ImmutableLastWinningNumberResults
}

func NewLastWinningNumberCall(ctx wasmlib.ScFuncContext) *LastWinningNumberCall {
	f := &LastWinningNumberCall{}
	f.Func.Init(HScName, HViewLastWinningNumber, nil, &f.Results.id)
	return f
}

func NewLastWinningNumberCallFromView(ctx wasmlib.ScViewContext) *LastWinningNumberCall {
	f := &LastWinningNumberCall{}
	f.Func.Init(HScName, HViewLastWinningNumber, nil, &f.Results.id)
	return f
}
