// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package erc20

import "github.com/iotaledger/wasplib/packages/vm/wasmlib"

type MutableFuncApproveParams struct {
	id int32
}

func (s MutableFuncApproveParams) Amount() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamAmount])
}

func (s MutableFuncApproveParams) Delegation() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamDelegation])
}

type ImmutableFuncApproveParams struct {
	id int32
}

func (s ImmutableFuncApproveParams) Amount() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamAmount])
}

func (s ImmutableFuncApproveParams) Delegation() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamDelegation])
}

type MutableFuncInitParams struct {
	id int32
}

func (s MutableFuncInitParams) Creator() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamCreator])
}

func (s MutableFuncInitParams) Supply() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamSupply])
}

type ImmutableFuncInitParams struct {
	id int32
}

func (s ImmutableFuncInitParams) Creator() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamCreator])
}

func (s ImmutableFuncInitParams) Supply() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamSupply])
}

type MutableFuncTransferParams struct {
	id int32
}

func (s MutableFuncTransferParams) Account() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamAccount])
}

func (s MutableFuncTransferParams) Amount() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamAmount])
}

type ImmutableFuncTransferParams struct {
	id int32
}

func (s ImmutableFuncTransferParams) Account() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamAccount])
}

func (s ImmutableFuncTransferParams) Amount() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamAmount])
}

type MutableFuncTransferFromParams struct {
	id int32
}

func (s MutableFuncTransferFromParams) Account() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamAccount])
}

func (s MutableFuncTransferFromParams) Amount() wasmlib.ScMutableInt64 {
	return wasmlib.NewScMutableInt64(s.id, idxMap[IdxParamAmount])
}

func (s MutableFuncTransferFromParams) Recipient() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamRecipient])
}

type ImmutableFuncTransferFromParams struct {
	id int32
}

func (s ImmutableFuncTransferFromParams) Account() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamAccount])
}

func (s ImmutableFuncTransferFromParams) Amount() wasmlib.ScImmutableInt64 {
	return wasmlib.NewScImmutableInt64(s.id, idxMap[IdxParamAmount])
}

func (s ImmutableFuncTransferFromParams) Recipient() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamRecipient])
}

type MutableViewAllowanceParams struct {
	id int32
}

func (s MutableViewAllowanceParams) Account() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamAccount])
}

func (s MutableViewAllowanceParams) Delegation() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamDelegation])
}

type ImmutableViewAllowanceParams struct {
	id int32
}

func (s ImmutableViewAllowanceParams) Account() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamAccount])
}

func (s ImmutableViewAllowanceParams) Delegation() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamDelegation])
}

type MutableViewBalanceOfParams struct {
	id int32
}

func (s MutableViewBalanceOfParams) Account() wasmlib.ScMutableAgentId {
	return wasmlib.NewScMutableAgentId(s.id, idxMap[IdxParamAccount])
}

type ImmutableViewBalanceOfParams struct {
	id int32
}

func (s ImmutableViewBalanceOfParams) Account() wasmlib.ScImmutableAgentId {
	return wasmlib.NewScImmutableAgentId(s.id, idxMap[IdxParamAccount])
}

type MutableViewTotalSupplyParams struct {
	id int32
}

type ImmutableViewTotalSupplyParams struct {
	id int32
}
