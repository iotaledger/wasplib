// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package org.iota.wasp.contracts.tokenregistry.types;

import org.iota.wasp.wasmlib.bytes.BytesDecoder;
import org.iota.wasp.wasmlib.bytes.BytesEncoder;
import org.iota.wasp.wasmlib.hashtypes.ScAgentId;

public class Token {
	//@formatter:off
	public long      Created;     // creation timestamp
	public String    Description; // description what minted token represents
	public ScAgentId MintedBy;    // original minter
	public ScAgentId Owner;       // current owner
	public long      Supply;      // amount of tokens originally minted
	public long      Updated;     // last update timestamp
	public String    UserDefined; // any user defined text
	//@formatter:on

	public Token() {
	}

	public Token(byte[] bytes) {
		BytesDecoder decode = new BytesDecoder(bytes);
		Created = decode.Int();
		Description = decode.String();
		MintedBy = decode.AgentId();
		Owner = decode.AgentId();
		Supply = decode.Int();
		Updated = decode.Int();
		UserDefined = decode.String();
	}

	public byte[] toBytes() {
		return new BytesEncoder().
				Int(Created).
				String(Description).
				AgentId(MintedBy).
				AgentId(Owner).
				Int(Supply).
				Int(Updated).
				String(UserDefined).
				Data();
	}
}
